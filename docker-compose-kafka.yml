version: "3.5"

volumes:
  postgres_data:
    driver: local
  designer_obj_repo:
    driver: local
  local_files:
    driver: local

services:
  hetida-designer-frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    #image: hetida/designer-frontend
    ports:
      - 80:8080
    depends_on:
      - hetida-designer-backend
      - hetida-designer-demo-adapter-python

  hetida-designer-backend:
    build:
      context: .
      dockerfile: Dockerfile-runtime
    #image: hetida/designer-backend
    environment:
      - HD_DATABASE_URL=postgresql+psycopg2://hetida_designer_dbuser:hetida_designer_dbpasswd@hetida-designer-db:5432/hetida_designer_db
      - HD_ENSURE_DB_SCHEMA=true
      - HD_IS_RUNTIME_SERVICE=false
      - HETIDA_DESIGNER_KAFKA_ENABLED=true

    depends_on:
      hetida-designer-db:
        condition: service_healthy
      hetida-designer-runtime: 
        condition: "service_started"

    ports:
      - 8080:8090

  hetida-designer-runtime:
    build:
      context: .
      dockerfile: Dockerfile-runtime
    #image: hetida/designer-runtime
    volumes:
      - designer_obj_repo:/mnt/obj_repo
      - ./runtime/demodata/local_files:/mnt/mounted_local_files
    ports:
      - 8090:8090
    environment:
      RUNTIME_LOCAL_FILE_ADAPTER_LOCAL_DIRECTORIES: '["/mnt/mounted_local_files"]'
      HD_IS_BACKEND_SERVICE: 'false'

  hetida-designer-db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: hetida_designer_db
      POSTGRES_USER: hetida_designer_dbuser
      POSTGRES_PASSWORD: hetida_designer_dbpasswd
    ports:
      - "5430:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hetida_designer_dbuser -d hetida_designer_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: zookeeper:3.7
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "hd-execution-topic:8:1,hd-execution-response-topic:8:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_BROKER_ID: -1
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  hetida-designer-demo-adapter-java:
    build:
      context: .
      dockerfile: Dockerfile-demo-adapter-java
    image: hetida/designer-demo-adapter-java
    ports:
      - 8091:8091

  hetida-designer-demo-adapter-python:
    build:
      context: .
      dockerfile: Dockerfile-demo-adapter-python
    image: hetida/designer-demo-adapter-python
    ports:
      - 8092:8092

networks:
  default:
    name: hetida-designer-network
