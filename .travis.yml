language: minimal
services:
- docker
script:
- echo $(cat VERSION)
- echo "$docker_pwd" | docker login -u "$docker_user" --password-stdin
- docker build --quiet -t "$docker_organization"/designer-frontend:latest -f Dockerfile-frontend .
- docker tag "$docker_organization"/designer-frontend:latest "$docker_organization"/designer-frontend:$(cat VERSION)
- docker push "$docker_organization"/designer-frontend:latest
- docker push "$docker_organization"/designer-frontend:$(cat VERSION)
- docker build  --quiet -t "$docker_organization"/designer-backend:latest -f Dockerfile-backend .
- docker tag "$docker_organization"/designer-backend:latest "$docker_organization"/designer-backend:$(cat VERSION)
- docker push "$docker_organization"/designer-backend:latest
- docker push "$docker_organization"/designer-backend:$(cat VERSION)
- docker build  --quiet -t "$docker_organization"/designer-runtime:latest --target prod -f Dockerfile-runtime .
- docker tag "$docker_organization"/designer-runtime:latest "$docker_organization"/designer-runtime:$(cat VERSION)
- docker push "$docker_organization"/designer-runtime:latest
- docker push "$docker_organization"/designer-runtime:$(cat VERSION)
- docker build  --quiet -t "$docker_organization"/designer-demo-adapter-java:latest -f Dockerfile-demo-adapter-java .
- docker tag "$docker_organization"/designer-demo-adapter-java:latest "$docker_organization"/designer-demo-adapter-java:$(cat VERSION)
- docker push "$docker_organization"/designer-demo-adapter-java:latest
- docker push "$docker_organization"/designer-demo-adapter-java:$(cat VERSION)
- docker build  --quiet -t "$docker_organization"/designer-demo-adapter-python:latest --target prod -f Dockerfile-demo-adapter-python .
- docker tag "$docker_organization"/designer-demo-adapter-python:latest "$docker_organization"/designer-demo-adapter-python:$(cat VERSION)
- docker push "$docker_organization"/designer-demo-adapter-python:latest
- docker push "$docker_organization"/designer-demo-adapter-python:$(cat VERSION)
env:
  global:
    secure: hCroXVVPx8NQwSU1NjV8AcbRHreSkli/4+nTq84eYwsNf8tcikIHGR6i2GTx2RbE+25VwvKzteZ9AYzlMU/XNot4EKO12Fl6o1BDViAYWTYoKJ445rduid417G0HfXJrzv1804phEjmhjbCMyL/JOpKfKpSh5Nxyl0XSJCJAo1XKi+jA9uZehU4918JS6r9Xo6LqRw4rWzX6F/QxBMjo606SqId2jnIUknpMqiWGPASjEDXN2+0ubfhlOFqmijiPCU9sp1x05PRYGCh87r+EbdMSlWwpBwvmhTqM6NQBeQk/P47tYqS7/yt7KWQeHcyBmhPuujSjvVYxuFh7MfSdDRmj7hzK40AHJ1096QRPgK2Da2pp+PVis3vok70PLXWFeVI7OHMCcZap1t1idTQxk42Mp3aqIE/LAU1QXf+wmg+T+oCLDC3zyvXn4kX1XB8Db+7uWbrobY7L5Nz2+YYmCGWv+b1/VmMKbY1ES8GCxFA0JanBxGrS2xBm+CkLiU5VQbD9WwSJy8i8OaWi7y0JYJ0ifRGE7ZIY3hiVISvfzS+UB7yx4jo6JnsqMsWZD1FHPYNLOFOK3TGKiM9l0Sc8PM6so6tA+jkm6OA1pw9LjFwmZ1P+Rejl4g3POvOVGgxavATkogbUL1q3u6E5drm9VKNbX/UrtMDsByWID5h1SCw=
    