{
    "code_modules": [
      {
        "code": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType  # add your own imports here\nfrom hetdesrun.utils import plotly_fig_to_json_dict\n\nimport pandas as pd\n\nfrom plotly.graph_objects import Figure\nimport plotly.express as px\n\nimport plotly.io as pio\n\npio.templates.default = None\n\n\ndef timeseries_comparison_plot(\n    series_1: pd.Series,\n    series_2: pd.Series,\n    traces_opts: dict = {},\n    layout_opts: dict = {\n        \"xaxis_title\": \"Time\",\n        \"yaxis_title\": \"Values\",\n        \"autosize\": True,\n        \"height\": 200,\n    },\n    line_opts: dict = {},\n) -> Figure:\n    \"\"\"Create a single time series line plot Plotly figure\n    \n    Returns the plotly figure object.\n    \"\"\"\n\n    fig = Figure()\n    # Only thing I figured is - I could do this\n\n    s1 = series_1.sort_index()\n\n    fig.add_scatter(\n        x=s1.index, y=s1, mode=\"lines\", name=s1.name if s1.name else \"series_1\"\n    )  # Not what is desired - need a line\n\n    s2 = series_2.sort_index()\n\n    fig.add_scatter(\n        x=s2.index, y=s2, mode=\"lines\", name=s2.name if s2.name else \"series_2\"\n    )  # Not what is desired - need a line\n\n    fig.update_layout(**layout_opts)  # see https://plotly.com/python/figure-labels/\n    fig.update_traces(traces_opts)  # set line color?\n\n    fig.update_layout(margin=dict(l=0, r=0, b=0, t=5, pad=0))\n\n    fig.update_yaxes(automargin=True)\n    fig.update_xaxes(automargin=True)\n    return fig\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"series_1\": \"SERIES\",\n        \"series_2\": \"SERIES\",\n    },\n    \"outputs\": {\n        \"comparison_plot\": \"PLOTLYJSON\",\n    },\n    \"name\": \"Compare Two Timeseries Plot\",\n    \"category\": \"Visualization\",\n    \"description\": \"Plotting of two timeseries in the same plot\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"a432923f-4718-44ae-3c9c-9832e68724bb\",\n    \"revision_group_id\": \"a432923f-4718-44ae-3c9c-9832e68724bb\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:30.020807+00:00\",\n}\n\n\ndef main(*, series_1, series_2):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    return {\n        \"comparison_plot\": plotly_fig_to_json_dict(\n            timeseries_comparison_plot(series_1, series_2)\n        )\n    }\n",
        "uuid": "a432923f-4718-44ae-3c9c-9832e68724bb"
      }
    ],
    "components": [
      {
        "code_module_uuid": "a432923f-4718-44ae-3c9c-9832e68724bb",
        "function_name": "main",
        "inputs": [
          {
            "id": "d416b294-0dc1-06b8-01ad-afd4d9794ae4",
            "name": "series_1",
            "type": "SERIES"
          },
          {
            "id": "8478c25c-9370-e6d9-7a1f-4d611782570c",
            "name": "series_2",
            "type": "SERIES"
          }
        ],
        "name": "Compare Two Timeseries Plot",
        "outputs": [
          {
            "id": "0951b836-933c-044d-030b-6c2ee3b5d00a",
            "name": "comparison_plot",
            "type": "PLOTLYJSON"
          }
        ],
        "tag": "1.0.0",
        "uuid": "a432923f-4718-44ae-3c9c-9832e68724bb"
      }
    ],
    "configuration": {
      "engine": "plain",
      "name": "3f47f935-5671-459a-b66d-42aefbfdde84",
      "return_individual_node_results": false,
      "run_pure_plot_operators": false
    },
    "job_id": "316e3388-9ff4-4c20-805d-3b4088f897f9",
    "workflow": {
      "connections": [],
      "id": "29423b18-4709-4f91-9b53-67e1cce87191",
      "inputs": [
        {
          "constant": false,
          "constantValue": null,
          "id": "11985a0c-438c-4510-a172-9ecc27b4d51e",
          "id_of_sub_node": "dfa01f91-fb8d-47b6-9732-32fb0d6467a5",
          "name": "series_1",
          "name_in_subnode": "series_1",
          "type": "SERIES"
        },
        {
          "constant": false,
          "constantValue": null,
          "id": "19c027b9-baa4-4ecf-86f1-9f0841a38723",
          "id_of_sub_node": "dfa01f91-fb8d-47b6-9732-32fb0d6467a5",
          "name": "series_2",
          "name_in_subnode": "series_2",
          "type": "SERIES"
        }
      ],
      "name": "Wrapper Workflow",
      "outputs": [
        {
          "id": "7df1e998-017a-4e3e-87ee-8e4b74792da4",
          "id_of_sub_node": "dfa01f91-fb8d-47b6-9732-32fb0d6467a5",
          "name": "comparison_plot",
          "name_in_subnode": "comparison_plot",
          "type": "PLOTLYJSON"
        }
      ],
      "sub_nodes": [
        {
          "component_uuid": "a432923f-4718-44ae-3c9c-9832e68724bb",
          "id": "dfa01f91-fb8d-47b6-9732-32fb0d6467a5",
          "name": "Compare Two Timeseries Plot"
        }
      ],
      "tr_id": "3f47f935-5671-459a-b66d-42aefbfdde84",
      "tr_name": "Wrapper Workflow",
      "tr_tag": "1.0.0"
    },
    "workflow_wiring": {
      "input_wirings": [
        {
          "adapter_id": "direct_provisioning",
          "filters": {
            "value": "{\n    \"2020-01-01T01:15:27.000Z\": 42.2,\n    \"2020-01-03T08:20:03.000Z\": 18.7,\n    \"2020-01-03T08:20:04.000Z\": 25.9\n}"
          },
          "ref_id": null,
          "ref_id_type": null,
          "ref_key": null,
          "type": null,
          "workflow_input_name": "series_1"
        },
        {
          "adapter_id": "direct_provisioning",
          "filters": {
            "value": "{\n    \"2020-01-01T01:15:27.000Z\": 42.2,\n    \"2020-01-03T08:20:03.000Z\": 18.7,\n    \"2020-01-03T08:20:04.000Z\": 25.9\n}"
          },
          "ref_id": null,
          "ref_id_type": null,
          "ref_key": null,
          "type": null,
          "workflow_input_name": "series_2"
        }
      ],
      "output_wirings": [
        {
          "adapter_id": 1,
          "ref_id": null,
          "ref_id_type": null,
          "ref_key": null,
          "type": null,
          "workflow_output_name": "comparison_plot"
        }
      ]
    }
  }