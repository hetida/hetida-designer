{
  "category": "Filters",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nfrom scipy.signal import butter\nfrom scipy.signal import lfilter\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Series, \"frequency\": DataType.Float},\n    outputs={\"filtered\": DataType.Series},\n    name=\"Highpass Filter\",\n    description=\"First-order digital highpass filter\",\n    category=\"Filters\",\n    id=\"417d44a2-1701-2e5b-bee8-7ce1a4dc1d0e\",\n    revision_group_id=\"417d44a2-1701-2e5b-bee8-7ce1a4dc1d0e\",\n    version_tag=\"1.0.0\"\n)\ndef main(*, data, frequency):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n    nyq = 0.5 * data.size / ((data.index[-1] - data.index[0]).total_seconds())\n    normal_frequency = frequency / nyq\n    b, a = butter(1, normal_frequency, btype=\"high\", analog=False)\n    filtered = lfilter(b, a, data)\n    return {\"filtered\": pd.Series(filtered, index=data.index)}\n\n",
  "description": "First-order digital highpass filter",
  "documentation": "# Highpass Filter\n\n## Description\nThis component is a digital first-order highpass-filter.\n\n## Inputs\n* **data** (Pandas Series): The indices must be datetimes with constant differences, the values must be numeric.\n* **frequency** (Float): Cut-off frequency. \n\n## Outputs\n* **filtered** (Pandas Series): The filtered data.\n\n## Details\nThe component filters a Pandas Series with a given cut-off frequency. The result is a Pandas Series, containing only frequencies greater than the cut-off frequency.\n",
  "id": "417d44a2-1701-2e5b-bee8-7ce1a4dc1d0e",
  "io_interface": {
    "inputs": [
      {
        "data_type": "SERIES",
        "id": "a966632c-a209-32a2-55e0-f650f602da2b",
        "name": "data"
      },
      {
        "data_type": "FLOAT",
        "id": "0bbdc8ac-c505-ab73-1bdf-338a64fc42bb",
        "name": "frequency"
      }
    ],
    "outputs": [
      {
        "data_type": "SERIES",
        "id": "2c84fdf8-bbcd-08a1-0f7e-f45826aab4e9",
        "name": "filtered"
      }
    ]
  },
  "name": "Highpass Filter",
  "released_timestamp": "2022-02-09T17:33:35.351211+00:00",
  "revision_group_id": "417d44a2-1701-2e5b-bee8-7ce1a4dc1d0e",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}