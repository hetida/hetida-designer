{
  "category": "Basic",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"left\": DataType.Any, \"right\": DataType.Any},\n    outputs={\"result\": DataType.Any},\n    component_name=\"Greater or equal\",\n    description=\"Checks if left is greater than or equal to right\",\n    category=\"Basic\",\n    id=\"f759e4c0-1468-0f2e-9740-41302b860193\",\n    revision_group_id=\"f759e4c0-1468-0f2e-9740-41302b860193\",\n    version_tag=\"1.0.0\"\n)\ndef main(*, left, right):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n\n    try:\n        return {\"result\": left >= right}\n    except ValueError:\n        return {\"result\": left.ge(right)}\n",
  "description": "Checks if left is greater than or equal to right",
  "documentation": "# Greater or Equal\n\n## Description\nThis component checks if left is greater than or equal to right.\n\n## Inputs\n* **left** (Integer, Float, Boolean, Pandas Series or Pandas DataFrame): Entries must be numeric. \n* **right** (Integer, Float, Boolean, Pandas Series or Pandas DataFrame): Entries must be numeric.\n\n## Outputs\n* **result** (Boolean, Pandas Series or Pandas DataFrame): The boolean result of the comparison.\n\n## Details\nThe component checks if left is greater than or equal to right. \n\n## Examples\nThe json input of a typical call of this component where left is a Pandas Series and right is numeric is\n```\n{\n\t\"left\": {\n\t\t\t\t\"2019-08-01T15:20:12\": 1.2,\n\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\"2019-08-03T16:20:15\": 0.3,\n\t\t\t\t\"2019-08-05T12:00:34\": 0.5\n\t},\n\t\"right\": 1.2\n}\n```\nThe expected output is\n```\n\t\"result\": {\n\t\t\"2019-08-01T15:20:12\": true,\n\t\t\"2019-08-01T15:44:12\": false,\n\t\t\"2019-08-03T16:20:15\": false,\n\t\t\"2019-08-05T12:00:34\": false\n\t}\n```\n\nThe json input of a typical call of this component where left is a Pandas DataFrame and right is numeric is\n```\n{\n\t\"left\": {\n\t\t\t\"a\": {\n                               \"2019-08-01T15:20:12\": 4.8,\n\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\"2019-08-03T16:20:15\": 0.3,\n\t\t\t\t\"2019-08-05T12:00:34\": 0.5\n             },\n            \"b\": {\n                                \"2019-08-01T15:20:12\": 54.4,\n\t\t\t\t \"2019-08-01T15:44:12\": 4.3,\n\t\t\t\t \"2019-08-03T16:20:15\": 21.0,\n\t\t\t\t \"2019-08-05T12:00:34\": 7.5\n             }\n\t},\n\t\"right\": 4.8\n}\n```\nThe expected output is\n```\n\t\"result\": {\n\t\t\t\"a\": {\n\t\t\t\t\"2019-08-01T15:20:12\": true,\n\t\t\t\t\"2019-08-01T15:44:12\": false,\n\t\t\t\t\"2019-08-03T16:20:15\": false,\n\t\t\t\t\"2019-08-05T12:00:34\": false\n\t\t\t},\n\t\t\t\"b\": {\n\t\t\t\t\"2019-08-01T15:20:12\": true,\n\t\t\t\t\"2019-08-01T15:44:12\": false,\n\t\t\t\t\"2019-08-03T16:20:15\": true,\n\t\t\t\t\"2019-08-05T12:00:34\": true\n\t\t\t}\n\t\t}\n\n\n```\n\nThe json input of a typical call of this component where both left and right are Pandas Series is\n```\n{\n\t\"left\": {\n\t\t\t\t\"2019-08-01T15:20:12\": 1.2,\n\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\"2019-08-03T16:20:15\": 0.3,\n\t\t\t\t\"2019-08-05T12:00:34\": 0.5\n\t},\n\t\"right\": {\n\t\t\t\t\"2019-08-01T15:20:12\": 1.2,\n\t\t\t\t\"2019-08-01T15:44:12\": 27,\n\t\t\t\t\"2019-08-03T16:20:15\": 3.6,\n\t\t\t\t\"2020-08-05T12:00:34\": 17,\n\t\t\t\t\"2021-08-05T12:00:34\": null       \n\t}\n}\n```\nThe expected output is\n```\n\t\"result\": {\n\t\t\t\"2019-08-01T15:20:12\": true,\n\t\t\t\"2019-08-01T15:44:12\": false,\n\t\t\t\"2019-08-03T16:20:15\": false,\n\t\t\t\"2019-08-05T12:00:34\": false,\n\t\t\t\"2020-08-05T12:00:34\": false,\n\t\t\t\"2021-08-05T12:00:34\": false\n\t\t}\n```\n",
  "id": "f759e4c0-1468-0f2e-9740-41302b860193",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "211c703a-891e-0dcd-a5d6-49756e02cf53",
        "name": "left"
      },
      {
        "data_type": "ANY",
        "id": "a1e4707a-d2ba-46ea-b866-627fd12bc5d0",
        "name": "right"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "6023ec09-572e-d0a9-b71c-78a85b9dac7b",
        "name": "result"
      }
    ]
  },
  "name": "Greater or equal",
  "released_timestamp": "2022-02-09T17:33:28.617461+00:00",
  "revision_group_id": "f759e4c0-1468-0f2e-9740-41302b860193",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}