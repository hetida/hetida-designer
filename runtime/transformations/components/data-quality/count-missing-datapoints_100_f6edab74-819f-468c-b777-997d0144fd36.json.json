{
    "id": "f6edab74-819f-468c-b777-997d0144fd36",
    "revision_group_id": "b9b997a2-649b-4516-aa33-cd9e5375649c",
    "name": "Count Missing Datapoints",
    "description": "Count missing datapoints for requested time period",
    "category": "Data Quality",
    "version_tag": "1.0.0",
    "state": "DRAFT",
    "type": "COMPONENT",
    "documentation": "# New Component/Workflow\n## Description\n## Inputs\n## Outputs\n## Details\n## Examples\n",
    "content": "import pandas as pd\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"series\": \"SERIES\",\n        \"frequency\": \"STRING\",\n        \"start\": \"STRING\",\n        \"end\": \"STRING\",\n    },\n    \"outputs\": {\n        \"nof_missing_datapoints\": \"INT\",\n    },\n    \"name\": \"Count Missing Datapoints\",\n    \"category\": \"Data Quality\",\n    \"description\": \"Count missing datapoints for requested time period\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"f6edab74-819f-468c-b777-997d0144fd36\",\n    \"revision_group_id\": \"b9b997a2-649b-4516-aa33-cd9e5375649c\",\n    \"state\": \"DRAFT\",\n}\n\n\ndef main(*, series, frequency, start, end):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    start_time = pd.to_datetime(start)\n    end_time = pd.to_datetime(end)\n    freq = pd.to_timedelta(frequency)\n    expected_nof_datapoints = (end_time - start_time) / freq\n    actual_nof_datapoints = series.size\n    return {\"nof_missing_datapoints\": expected_nof_datapoints - actual_nof_datapoints}\n    ",
    "io_interface": {
        "inputs": [
            {
                "id": "a5bb1174-f7fa-499d-9dfc-72398146de98",
                "name": "series",
                "data_type": "SERIES"
            },
            {
                "id": "0483b66b-423f-44c9-a458-527e3cbcb6ab",
                "name": "frequency",
                "data_type": "STRING"
            },
            {
                "id": "e85fad8b-a7da-4e4c-be9d-7cc89ffe69ce",
                "name": "start",
                "data_type": "STRING"
            },
            {
                "id": "d8e64a18-fec7-4b77-aad8-335f2b0f8efc",
                "name": "end",
                "data_type": "STRING"
            }
        ],
        "outputs": [
            {
                "id": "79c15c1f-607b-4bc7-a103-759a39dca2e1",
                "name": "nof_missing_datapoints",
                "data_type": "INT"
            }
        ]
    },
    "test_wiring": {
        "input_wirings": [
            {
                "workflow_input_name": "series",
                "adapter_id": "demo-adapter-python",
                "ref_id": "root.plantA.picklingUnit.influx.temp",
                "ref_id_type": "SOURCE",
                "type": "timeseries(float)",
                "filters": {
                    "timestampFrom": "2022-08-16T14:00:00.000000000Z",
                    "timestampTo": "2022-08-16T15:00:00.000000000Z"
                }
            },
            {
                "workflow_input_name": "frequency",
                "adapter_id": "direct_provisioning",
                "filters": {
                    "value": "5min"
                }
            },
            {
                "workflow_input_name": "start",
                "adapter_id": "direct_provisioning",
                "filters": {
                    "value": "8/16/2022 2:00 PM"
                }
            },
            {
                "workflow_input_name": "end",
                "adapter_id": "direct_provisioning",
                "filters": {
                    "value": "8/16/2022 2:00 PM"
                }
            }
        ],
        "output_wirings": []
    }
}