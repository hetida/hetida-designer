{
  "category": "Time length operations",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Any, \"t\": DataType.String},\n    outputs={\"interpolation\": DataType.Any},\n    name=\"Linear Interpolation Datetime Index\",\n    description=\"Calculates the linear interpolation for some time frequency\",\n    category=\"Time length operations\",\n    id=\"0362dc9d-9861-b2c2-e26b-2a42909346bf\",\n    revision_group_id=\"0362dc9d-9861-b2c2-e26b-2a42909346bf\",\n    version_tag=\"1.0.0\"\n)\ndef main(*, data, t):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    data_date = data.copy()\n    try:\n        data_date.index = pd.to_datetime(data_date.index)\n    except (ValueError, TypeError):\n        raise TypeError(\"indices of data must be datetime\")\n\n    try:\n        return {\"interpolation\": data_date.resample(t).interpolate()}\n    except (ValueError):\n        raise ValueError(f\"t could not be parsed as frequency: {t}\")\n",
  "description": "Calculates the linear interpolation for some time frequency",
  "documentation": "# Linear Interpolation Datetime Index\n\n## Description\nThe component linearly interpolates the input data for some given time frequency.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be datetimes, entries numeric.\n* **t** (String): The time frequency used in the interpolation. For example, 'ms', 's', 'min', 'h' or 'd'.\n\n## Outputs\n* **interpolation** (Pandas Series or Pandas DataFrame): The linear interpolation of **data**. \n\n## Details\nThe component calculates the linear interpolation of the input **data** for some time frequency **t**. \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n                \"2019-08-01T15:20:12\": 1.2,\n                \"2019-08-01T15:20:14\": 7.2,\n                \"2019-08-01T15:20:15\": 0.3,\n                \"2019-08-01T15:20:20\": 0.5,\n\t}, \n\t\"t\": s\n}\n```\nThe expected output is\n```\n\t\"interpolation\": {\n\t\t\t\t\"2019-08-01 15:20:12\": 1.20\n\t\t\t\t\"2019-08-01 15:20:13\": 4.20\n\t\t\t\t\"2019-08-01 15:20:14\": 7.20\n\t\t\t\t\"2019-08-01 15:20:15\": 0.30\n\t\t\t\t\"2019-08-01 15:20:16\": 0.34\n\t\t\t\t\"2019-08-01 15:20:17\": 0.38\n\t\t\t\t\"2019-08-01 15:20:18\": 0.42\n\t\t\t\t\"2019-08-01 15:20:19\": 0.46\n\t\t\t\t\"2019-08-01 15:20:20\": 0.50\n\t}\n```\n",
  "id": "0362dc9d-9861-b2c2-e26b-2a42909346bf",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "a3251e66-0eef-65a4-afb2-484b688d157d",
        "name": "data"
      },
      {
        "data_type": "STRING",
        "id": "c6ad04d9-4230-d6a3-c4db-f83a0f52a4af",
        "name": "t"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "d6e26a17-024e-a6ce-a4aa-8af713780960",
        "name": "interpolation"
      }
    ]
  },
  "name": "Linear Interpolation Datetime Index",
  "released_timestamp": "2022-02-09T17:33:28.989750+00:00",
  "revision_group_id": "0362dc9d-9861-b2c2-e26b-2a42909346bf",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}