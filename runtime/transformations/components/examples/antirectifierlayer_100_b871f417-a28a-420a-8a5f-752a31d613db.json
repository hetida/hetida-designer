{
  "category": "Examples",
  "content": "\"\"\"Documentation for AntirectifierLayer\n\n# AntirectifierLayout\n\n## Description\nDefinition of the AntirectifierLayout class.\n\n## Inputs\nThis component has no inputs.\n\n## Outputs\n* **AntirectifierLayer** (Tensorflow Keras Layer): AntirectifierLayer class\n\n## Details\nThis component is used to provide workflows with the definition of the AntirectifierLayer.\n\"\"\"\n\nimport tensorflow as tf\n\n\nclass AntirectifierLayer(tf.keras.layers.Layer):\n    def __init__(self, initializer=\"he_normal\", **kwargs):\n        super().__init__(**kwargs)\n        self.initializer = tf.keras.initializers.get(initializer)\n\n    def build(self, input_shape):\n        output_dim = input_shape[-1]\n        self.kernel = self.add_weight(\n            shape=(output_dim * 2, output_dim),\n            initializer=self.initializer,\n            name=\"kernel\",\n            trainable=True,\n        )\n\n    def call(self, inputs):\n        inputs -= tf.reduce_mean(inputs, axis=-1, keepdims=True)\n        pos = tf.nn.relu(inputs)\n        neg = tf.nn.relu(-inputs)\n        concatenated = tf.concat([pos, neg], axis=-1)\n        mixed = tf.matmul(concatenated, self.kernel)\n        return mixed\n\n    def get_config(self):\n        # Implement get_config to enable serialization. This is optional.\n        base_config = super().get_config()\n        config = {\"initializer\": tf.keras.initializers.serialize(self.initializer)}\n        return dict(list(base_config.items()) + list(config.items()))\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {},\n    \"outputs\": {\n        \"AntirectifierLayer\": {\"data_type\": \"ANY\"},\n    },\n    \"name\": \"AntirectifierLayer\",\n    \"category\": \"Examples\",\n    \"description\": \"AntirectifierLayer\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"b871f417-a28a-420a-8a5f-752a31d613db\",\n    \"revision_group_id\": \"58d842e6-b98a-4085-a832-7ff974471981\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2023-04-05T16:35:36.451490+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main():\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    return {\"AntirectifierLayer\": AntirectifierLayer}\n\n\nTEST_WIRING_FROM_PY_FILE_IMPORT = {}\nRELEASE_WIRING = {}\n",
  "description": "AntirectifierLayer",
  "documentation": "# AntirectifierLayout\n\n## Description\nDefinition of the AntirectifierLayout class.\n\n## Inputs\nThis component has no inputs.\n\n## Outputs\n* **AntirectifierLayer** (Tensorflow Keras Layer): AntirectifierLayer class\n\n## Details\nThis component is used to provide workflows with the definition of the AntirectifierLayer.",
  "id": "b871f417-a28a-420a-8a5f-752a31d613db",
  "io_interface": {
    "inputs": [],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "1aa929d4-24f3-400d-8318-cd337958a964",
        "name": "AntirectifierLayer"
      }
    ]
  },
  "name": "AntirectifierLayer",
  "release_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "released_timestamp": "2023-04-05T16:35:36.451490+00:00",
  "revision_group_id": "58d842e6-b98a-4085-a832-7ff974471981",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}