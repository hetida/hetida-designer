{
  "category": "Statistic",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Any, \"t\": DataType.String},\n    outputs={\"movmin\": DataType.Any},\n    name=\"Moving minimum time\",\n    description=\"Calculates the moving minimum for a constant time interval\",\n    category=\"Statistic\",\n    version_tag=\"1.0.0\",\n    id=\"33d7c458-762c-7555-7a20-26ef0708bc28\",\n    revision_group_id=\"33d7c458-762c-7555-7a20-26ef0708bc28\",\n    state=\"RELEASED\",\n    released_timestamp=\"2022-02-09T17:33:32.919407+00:00\"\n)\ndef main(*, data, t):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    try:\n        data.index = pd.to_datetime(data.index)\n    except (ValueError, TypeError):\n        raise TypeError(\"indices of data must be datetime\")\n\n    data_sort = data.sort_index().dropna()\n    try:\n        return {\"movmin\": data_sort.rolling(t).min()}\n    except (ValueError):\n        raise ValueError(f\"t could not be parsed as frequency: {t}\")\n",
  "description": "Calculates the moving minimum for a constant time interval",
  "documentation": "# Moving minimum time\n\n## Description\nThe component calculates the moving minimum for a constant time interval.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be datetimes, entries must be numeric.\n* **t** (String): The lenght of the time interval, the minimum is calculated for. For example, '2ms', '2s', '2min', '2h' or '2d'.\n\n## Outputs\n* **movmin** (Pandas Series or Pandas DataFrame): The moving minimum of **data**. \n\n## Details\nThe component calculates the moving minimum for a constant time interval. \n\nTherefore, it excludes NaN respectively None values from **data** and equippes each remaining index with the minimum of the numerical observations in the foregoing time interval of length t.   \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:40\": null,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}, \n\t\"t\": 7s\n}\n```\nThe expected output is\n```\n\t\"movmin\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}\n```\n",
  "id": "33d7c458-762c-7555-7a20-26ef0708bc28",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "3dbae9ca-ea79-c96f-268c-e713baaccf57",
        "name": "data"
      },
      {
        "data_type": "STRING",
        "id": "3c9b6644-beff-26a9-6926-0182a6cd13cd",
        "name": "t"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "5934c762-75d3-aa09-029a-5f5ad9536c5d",
        "name": "movmin"
      }
    ]
  },
  "name": "Moving minimum time",
  "released_timestamp": "2022-02-09T17:33:32.919407+00:00",
  "revision_group_id": "33d7c458-762c-7555-7a20-26ef0708bc28",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}