{
  "category": "Statistic",
  "content": "from hetdesrun.component.registration import register\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"data\": {\"data_type\": \"ANY\"},\n        \"n\": {\"data_type\": \"INT\"},\n    },\n    \"outputs\": {\n        \"movmax\": {\"data_type\": \"ANY\"},\n    },\n    \"name\": \"Moving maximum number\",\n    \"category\": \"Statistic\",\n    \"description\": \"Calculates the moving maximum for a constant number of observations\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"468f917b-7b99-9394-d600-50ee05237041\",\n    \"revision_group_id\": \"468f917b-7b99-9394-d600-50ee05237041\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:33.240792+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, data, n):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    data_dropna = data.dropna()\n    if pd.api.types.is_numeric_dtype(data_dropna.index.dtype):\n        data_sort = data_dropna.sort_index()\n\n    else:\n        try:\n            data_dropna.index = pd.to_datetime(data_dropna.index)\n        except (ValueError, TypeError):\n            raise TypeError(\"indices of data must be numeric or datetime\")\n        data_sort = data_dropna.sort_index()\n    return {\"movmax\": data_sort.rolling(n).max()}\n",
  "description": "Calculates the moving maximum for a constant number of observations",
  "documentation": "# Moving maximum number\n\n## Description\nThe component calculates the moving maximum for a constant number of observations.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be numeric or datetimes, entries must be numeric.\n* **n** (Integer): The number of observations, the maximum is calculated for.\n\n## Outputs\n* **movmax** (Pandas Series or Pandas DataFrame): The moving maximum of **data**.\n\n## Details\nThe component calculates the moving maximum for a constant number of observations, sorted by their indices. \n\nTherefore, it excludes NaN respectively None values from **data** and equippes each remaining index with the maximum of the foregoing n numerical observations.   \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:40\": null,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}, \n\t\"n\": 3\n}\n```\nThe expected output is\n```\n\t\"movmax\": {\n\t\t\t\t\"2019-08-01T15:20:10\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": null,\n\t\t\t\t\"2019-08-01T15:20:30\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 12.0\n\t}\n```\n",
  "id": "468f917b-7b99-9394-d600-50ee05237041",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "0946bafe-e91b-70eb-345e-df8c4f742d94",
        "name": "data",
        "type": "REQUIRED"
      },
      {
        "data_type": "INT",
        "id": "5ec0ce79-7de8-f60f-9f10-59db81439948",
        "name": "n",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "c9f55ad2-345e-6b44-d9c5-6461f18a2e24",
        "name": "movmax"
      }
    ]
  },
  "name": "Moving maximum number",
  "released_timestamp": "2022-02-09T17:33:33.240792+00:00",
  "revision_group_id": "468f917b-7b99-9394-d600-50ee05237041",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}