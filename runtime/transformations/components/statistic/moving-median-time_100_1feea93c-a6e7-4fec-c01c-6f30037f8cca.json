{
  "category": "Statistic",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Any, \"t\": DataType.String},\n    outputs={\"movmedian\": DataType.Any},\n    name=\"Moving median time\",\n    description=\"Calculates the moving median for a constant time interval\",\n    category=\"Statistic\",\n    id=\"1feea93c-a6e7-4fec-c01c-6f30037f8cca\",\n    revision_group_id=\"1feea93c-a6e7-4fec-c01c-6f30037f8cca\",\n    version_tag=\"1.0.0\"\n)\ndef main(*, data, t):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    try:\n        data.index = pd.to_datetime(data.index)\n    except (ValueError, TypeError):\n        raise TypeError(\"indices of data must be datetime\")\n\n    data_sort = data.sort_index().dropna()\n    try:\n        return {\"movmedian\": data_sort.rolling(t).median()}\n    except (ValueError):\n        raise ValueError(f\"t could not be parsed as frequency: {t}\")\n",
  "description": "Calculates the moving median for a constant time interval",
  "documentation": "# Moving median time\n\n## Description\nThe component calculates the moving median for a constant time interval.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be datetimes, entries must be numeric.\n* **t** (String): The lenght of the time interval, the median is calculated for. For example, '2ms', '2s', '2min', '2h' or '2d'.\n\n## Outputs\n* **movmedian** (Pandas Series or Pandas DataFrame): The moving median of **data**. \n\n## Details\nThe component calculates the moving median for a constant time interval. \n\nTherefore, it excludes NaN respectively None values from **data** and equippes each remaining index with the median of the numerical observations in the foregoing time interval of length t.   \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:40\": null,\n\t\t\t\t\"2019-08-01T15:20:50\": 10.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}, \n\t\"t\": 16s\n}\n```\nThe expected output is\n```\n\t\"movmedian\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 1.5,\n\t\t\t\t\"2019-08-01T15:20:35\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:50\": 8.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 11.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 10.0\n\t}\n```\n",
  "id": "1feea93c-a6e7-4fec-c01c-6f30037f8cca",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "6b923bb9-8bc1-d887-2301-0dd6a635ef70",
        "name": "data"
      },
      {
        "data_type": "STRING",
        "id": "68c2afc3-f44e-f7e5-1ccd-4937d66da3bc",
        "name": "t"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "2dbd97a1-b135-f3e6-3ee9-23b30ab35d4b",
        "name": "movmedian"
      }
    ]
  },
  "name": "Moving median time",
  "released_timestamp": "2022-02-09T17:33:33.096270+00:00",
  "revision_group_id": "1feea93c-a6e7-4fec-c01c-6f30037f8cca",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}