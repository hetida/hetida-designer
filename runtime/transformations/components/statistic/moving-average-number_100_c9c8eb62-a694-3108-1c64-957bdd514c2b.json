{
  "category": "Statistic",
  "content": "\"\"\"Documentation for Moving average number\n\n# Moving average number\n\n## Description\nThe component calculates the moving average for a constant number of observations.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be numeric or datetimes, entries must be numeric.\n* **n** (Integer): The number of observations, the average is calculated for.\n\n## Outputs\n* **mavg** (Pandas Series or Pandas DataFrame): The moving average of **data**.\n\n## Details\nThe component calculates the moving average for a constant number of observations, sorted by their indices. \n\nTherefore, it excludes NaN respectively None values from **data** and equippes each remaining index with the average of the foregoing n numerical observations.\n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:40\": null,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}, \n\t\"n\": 3\n}\n```\nThe expected output is\n```\n\t\"mavg\": {\n\t\t\t\t\"2019-08-01T15:20:10\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": null,\n\t\t\t\t\"2019-08-01T15:20:30\": 2.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}\n```\n\"\"\"\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"data\": {\"data_type\": \"ANY\"},\n        \"n\": {\"data_type\": \"INT\"},\n    },\n    \"outputs\": {\n        \"mavg\": {\"data_type\": \"ANY\"},\n    },\n    \"name\": \"Moving average number\",\n    \"category\": \"Statistic\",\n    \"description\": \"Calculates the moving average for a constant number of observations\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"c9c8eb62-a694-3108-1c64-957bdd514c2b\",\n    \"revision_group_id\": \"c9c8eb62-a694-3108-1c64-957bdd514c2b\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:33.160618+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, data, n):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    data_dropna = data.dropna()\n    if pd.api.types.is_numeric_dtype(data_dropna.index.dtype):\n        data_sort = data_dropna.sort_index()\n\n    else:\n        try:\n            data_dropna.index = pd.to_datetime(data_dropna.index)\n        except (ValueError, TypeError):\n            raise TypeError(\"indices of data must be numeric or datetime\")\n        data_sort = data_dropna.sort_index()\n    return {\"mavg\": data_sort.rolling(n).mean()}\n\n\nTEST_WIRING_FROM_PY_FILE_IMPORT = {}\n",
  "description": "Calculates the moving average for a constant number of observations",
  "documentation": "# Moving average number\n\n## Description\nThe component calculates the moving average for a constant number of observations.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be numeric or datetimes, entries must be numeric.\n* **n** (Integer): The number of observations, the average is calculated for.\n\n## Outputs\n* **mavg** (Pandas Series or Pandas DataFrame): The moving average of **data**.\n\n## Details\nThe component calculates the moving average for a constant number of observations, sorted by their indices. \n\nTherefore, it excludes NaN respectively None values from **data** and equippes each remaining index with the average of the foregoing n numerical observations.\n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:40\": null,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}, \n\t\"n\": 3\n}\n```\nThe expected output is\n```\n\t\"mavg\": {\n\t\t\t\t\"2019-08-01T15:20:10\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": null,\n\t\t\t\t\"2019-08-01T15:20:30\": 2.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}\n```\n",
  "id": "c9c8eb62-a694-3108-1c64-957bdd514c2b",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "34ddd872-40cc-8c2a-cd95-ec3c194d7360",
        "name": "data",
        "type": "REQUIRED"
      },
      {
        "data_type": "INT",
        "id": "1ee20bfd-6aa1-bafc-3c18-614079784e1c",
        "name": "n",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "5b0c6d0a-1046-17f2-ece7-5235de433cc3",
        "name": "mavg"
      }
    ]
  },
  "name": "Moving average number",
  "released_timestamp": "2022-02-09T17:33:33.160618+00:00",
  "revision_group_id": "c9c8eb62-a694-3108-1c64-957bdd514c2b",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}