{
  "category": "Statistic",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Any, \"n\": DataType.Integer},\n    outputs={\"movmedian\": DataType.Any},\n    component_name=\"Moving median number\",\n    description=\"Calculates the moving median for a constant number of observations\",\n    category=\"Statistic\",\n    uuid=\"c9736810-73d8-b109-3822-96a5bf0a6d1c\",\n    group_id=\"c9736810-73d8-b109-3822-96a5bf0a6d1c\",\n    tag=\"1.0.0\"\n)\ndef main(*, data, n):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    data_dropna = data.dropna()\n    if pd.api.types.is_numeric_dtype(data_dropna.index.dtype):\n        data_sort = data_dropna.sort_index()\n\n    else:\n        try:\n            data_dropna.index = pd.to_datetime(data_dropna.index)\n        except (ValueError, TypeError):\n            raise TypeError(\"indices of data must be numeric or datetime\")\n        data_sort = data_dropna.sort_index()\n    return {\"movmedian\": data_sort.rolling(n).median()}\n",
  "description": "Calculates the moving median for a constant number of observations",
  "documentation": "# Moving median number\n\n## Description\nThe component calculates the moving median for a constant number of observations.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be numeric or datetimes, entries must be numeric.\n* **n** (Integer): The number of observations, the median is calculated for.\n\n## Outputs\n* **movmedian** (Pandas Series or Pandas DataFrame): The moving median of **data**.\n\n## Details\nThe component calculates the moving median for a constant number of observations, sorted by their indices. \n\nTherefore, it excludes NaN respectively None values from **data** and equippes each remaining index with the median of the foregoing n numerical observations.   \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:40\": null,\n\t\t\t\t\"2019-08-01T15:20:55\": 12.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}, \n\t\"n\": 3\n}\n```\nThe expected output is\n```\n\t\"movmedian\": {\n\t\t\t\t\"2019-08-01T15:20:10\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": null,\n\t\t\t\t\"2019-08-01T15:20:30\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:35\": 3.0,\n\t\t\t\t\"2019-08-01T15:20:55\": 6.0,\n\t\t\t\t\"2019-08-01T15:20:56\": 9.0\n\t}\n```\n",
  "id": "c9736810-73d8-b109-3822-96a5bf0a6d1c",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "a40336a2-7b58-5e64-000a-76ca4acabfa8",
        "name": "data"
      },
      {
        "data_type": "INT",
        "id": "47452b34-56f7-4781-dab4-b6ea97a16504",
        "name": "n"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "53dfadff-5c8e-9e46-84b6-dd39b740dbd3",
        "name": "movmedian"
      }
    ]
  },
  "name": "Moving median number",
  "released_timestamp": "2022-02-09T17:33:33.539215+00:00",
  "revision_group_id": "c9736810-73d8-b109-3822-96a5bf0a6d1c",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}