{
  "category": "Visualization",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.utils import plotly_fig_to_json_dict\n\nimport pandas as pd\n\nfrom plotly.graph_objects import Figure\nimport plotly.graph_objects as go\n\n\nimport plotly.io as pio\n\npio.templates.default = None\n\nsns_colorscale = [\n    [0.0, \"#3f7f93\"],  # cmap = sns.diverging_palette(220, 10, as_cmap = True)\n    [0.071, \"#5890a1\"],\n    [0.143, \"#72a1b0\"],\n    [0.214, \"#8cb3bf\"],\n    [0.286, \"#a7c5cf\"],\n    [0.357, \"#c0d6dd\"],\n    [0.429, \"#dae8ec\"],\n    [0.5, \"#f2f2f2\"],\n    [0.571, \"#f7d7d9\"],\n    [0.643, \"#f2bcc0\"],\n    [0.714, \"#eda3a9\"],\n    [0.786, \"#e8888f\"],\n    [0.857, \"#e36e76\"],\n    [0.929, \"#de535e\"],\n    [1.0, \"#d93a46\"],\n]\n\n\ndef correlation_heatmap(dataframe):\n    corr_df = dataframe.corr()\n\n    heat = go.Heatmap(\n        z=corr_df.values,\n        x=corr_df.columns,\n        y=corr_df.columns,\n        xgap=1,\n        ygap=1,\n        colorscale=sns_colorscale,\n        colorbar_thickness=20,\n        colorbar_ticklen=3,\n        hovertext=corr_df.astype(str),\n        hoverinfo=\"text\",\n    )\n\n    title = \"Correlation Matrix Heatmap\"\n\n    layout = go.Layout(\n        # title_text=title,\n        # title_x=0.5,\n        width=440,\n        height=400,\n        xaxis_showgrid=False,\n        yaxis_showgrid=False,\n        yaxis_autorange=\"reversed\",\n    )\n\n    fig = go.Figure(data=[heat], layout=layout)\n\n    fig.update_layout(margin=dict(l=0, r=0, b=0, t=5, pad=0))\n    fig.update_yaxes(automargin=True)\n    fig.update_xaxes(automargin=True)\n\n    return fig\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"dataframe\": {\"data_type\": \"DATAFRAME\"},\n    },\n    \"outputs\": {\n        \"plot\": {\"data_type\": \"PLOTLYJSON\"},\n    },\n    \"name\": \"Correlation Matrix Heatmap Plot\",\n    \"category\": \"Visualization\",\n    \"description\": \"Plotting a correlation matrix as a heatmap\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"8debf23e-54e3-5fa1-bb57-6d41058c66b7\",\n    \"revision_group_id\": \"8debf23e-54e3-5fa1-bb57-6d41058c66b7\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:31.006048+00:00\",\n}\n\n\ndef main(*, dataframe):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    return {\"plot\": plotly_fig_to_json_dict(correlation_heatmap(dataframe))}\n",
  "description": "Plotting a correlation matrix as a heatmap",
  "documentation": "# Correlation Matrix Heatmap Plot\n\n## Description\nPlotting a correlation matrix as a heatmap.\n\n## Inputs\n* **dataframe** (Pandas DataFrame): Correlation will be computed for its columns.\n\n## Outputs\n* **plot** (Plotly Json): The generated Plotly Json. This is used by the hetida designer frontend for plotting the results.\n\n## Details\nThe component generates a correlation matrix heatmap displaying correlation between the dataframe columns.\n\n## Examples\nThe json input of a typical call of this component is\n```\n{\n\t\"dataframe\": {\n    \"a\": [1,2,3,4,5,6,7],\n    \"b\": [7,6,5,4,3,2,1],\n    \"c\": [3,2,3,4,3,3,9],\n    \"d\": [1,2,4,4,1,1,1],\n    \"e\": [1,3,4,4,0,1,1],\n    \"f\": [2,2,4,4,2,1,1]\n    }\n}\n```\n",
  "id": "8debf23e-54e3-5fa1-bb57-6d41058c66b7",
  "io_interface": {
    "inputs": [
      {
        "data_type": "DATAFRAME",
        "id": "38fdfd24-a76e-6296-606e-73495727eaa0",
        "name": "dataframe",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "PLOTLYJSON",
        "id": "dd24f709-50f3-f9d5-94f6-ac9b0d403275",
        "name": "plot"
      }
    ]
  },
  "name": "Correlation Matrix Heatmap Plot",
  "released_timestamp": "2022-02-09T17:33:31.006048+00:00",
  "revision_group_id": "8debf23e-54e3-5fa1-bb57-6d41058c66b7",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}