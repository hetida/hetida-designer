{
  "category": "Visualization",
  "content": "\"\"\"Documentation for Contour Plot\n\n# Contour Plot\n\n## Description\nThis component creates a simple contour plot.\n\n## Inputs\n* **x** (Pandas Series): The series with the values for the x coordinates.\n* **y** (Pandas Series): The series with the values for the y coordinates.\n* **z** (Pandas Series): The function values for the contour plot. Must be of length **len(x)*len(y)**.\n\n## Outputs\n* **contour_plot** (Plotly Json): The generated Plotly Json. This is used by the hetida designer frontend for plotting the results.\n\n## Details\nGenerates a simple contour plot of the **z** values over **x** and **y** with most plot settings set automatically.\n\n## Examples\nThe json input of a typical call of this component is\n```\n{\n\t\"x\": [1,2,3],\n\t\"y\": [1,2,3],\n\t\"z\": [1,2,3,4,5,6,0,8,9]\n}\n```\n\"\"\"\n\nfrom hdutils import plotly_fig_to_json_dict\n\nimport pandas as pd\n\nfrom plotly.graph_objects import Figure\nimport plotly.graph_objects as go\n\n\nimport plotly.io as pio\n\npio.templates.default = None\n\nsns_colorscale = [\n    [0.0, \"#3f7f93\"],  # cmap = sns.diverging_palette(220, 10, as_cmap = True)\n    [0.071, \"#5890a1\"],\n    [0.143, \"#72a1b0\"],\n    [0.214, \"#8cb3bf\"],\n    [0.286, \"#a7c5cf\"],\n    [0.357, \"#c0d6dd\"],\n    [0.429, \"#dae8ec\"],\n    [0.5, \"#f2f2f2\"],\n    [0.571, \"#f7d7d9\"],\n    [0.643, \"#f2bcc0\"],\n    [0.714, \"#eda3a9\"],\n    [0.786, \"#e8888f\"],\n    [0.857, \"#e36e76\"],\n    [0.929, \"#de535e\"],\n    [1.0, \"#d93a46\"],\n]\n\n\ndef contour_plot(x, y, z):\n    fig = go.Figure(\n        data=go.Contour(\n            z=z.values.reshape(-1, len(x)), x=x, y=y  # horizontal axis  # vertical axis\n        ),\n        layout=go.Layout(\n            # title_text=title,\n            # title_x=0.5,\n            width=440,\n            height=400,\n            xaxis_showgrid=False,\n            yaxis_showgrid=False,\n        ),\n    )\n\n    fig.update_layout(margin=dict(l=0, r=0, b=0, t=5, pad=0))\n    fig.update_yaxes(automargin=True)\n    fig.update_xaxes(automargin=True)\n\n    return fig\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"x\": {\"data_type\": \"SERIES\"},\n        \"y\": {\"data_type\": \"SERIES\"},\n        \"z\": {\"data_type\": \"SERIES\"},\n    },\n    \"outputs\": {\n        \"contour_plot\": {\"data_type\": \"PLOTLYJSON\"},\n    },\n    \"name\": \"Contour Plot\",\n    \"category\": \"Visualization\",\n    \"description\": \"A simple contour plot\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"f7530499-51b2-dd01-0d21-c24ee6f8c37e\",\n    \"revision_group_id\": \"f7530499-51b2-dd01-0d21-c24ee6f8c37e\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:31.096890+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, x, y, z):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    return {\"contour_plot\": plotly_fig_to_json_dict(contour_plot(x, y, z))}\n\n\nTEST_WIRING_FROM_PY_FILE_IMPORT = {}\n",
  "description": "A simple contour plot",
  "documentation": "# Contour Plot\n\n## Description\nThis component creates a simple contour plot.\n\n## Inputs\n* **x** (Pandas Series): The series with the values for the x coordinates.\n* **y** (Pandas Series): The series with the values for the y coordinates.\n* **z** (Pandas Series): The function values for the contour plot. Must be of length **len(x)*len(y)**.\n\n## Outputs\n* **contour_plot** (Plotly Json): The generated Plotly Json. This is used by the hetida designer frontend for plotting the results.\n\n## Details\nGenerates a simple contour plot of the **z** values over **x** and **y** with most plot settings set automatically.\n\n## Examples\nThe json input of a typical call of this component is\n```\n{\n\t\"x\": [1,2,3],\n\t\"y\": [1,2,3],\n\t\"z\": [1,2,3,4,5,6,0,8,9]\n}\n```\n",
  "id": "f7530499-51b2-dd01-0d21-c24ee6f8c37e",
  "io_interface": {
    "inputs": [
      {
        "data_type": "SERIES",
        "id": "829cbd05-7a33-c931-b16e-a105f9a7c885",
        "name": "x",
        "type": "REQUIRED"
      },
      {
        "data_type": "SERIES",
        "id": "54e9008c-0451-9e1c-c334-31e3887a4b07",
        "name": "y",
        "type": "REQUIRED"
      },
      {
        "data_type": "SERIES",
        "id": "455f7a00-c731-b2ba-ee84-8d8b567bd50e",
        "name": "z",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "PLOTLYJSON",
        "id": "53dff70b-364f-e5b7-fbb4-c293a5d2f339",
        "name": "contour_plot"
      }
    ]
  },
  "name": "Contour Plot",
  "released_timestamp": "2022-02-09T17:33:31.096890+00:00",
  "revision_group_id": "f7530499-51b2-dd01-0d21-c24ee6f8c37e",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}