{
  "category": "Visualization",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.utils import plotly_fig_to_json_dict\n\nimport plotly.graph_objects as go\n\nimport plotly.io as pio\n\npio.templates.default = None\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"data\": {\"data_type\": \"DATAFRAME\"},\n    },\n    \"outputs\": {\n        \"table\": {\"data_type\": \"PLOTLYJSON\"},\n    },\n    \"name\": \"Display Table\",\n    \"category\": \"Visualization\",\n    \"description\": \"Display DataFrame as table\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"e0320729-10df-8979-4444-feb6fe7adc82\",\n    \"revision_group_id\": \"e0320729-10df-8979-4444-feb6fe7adc82\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:30.368991+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, data):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    columns = list(data.columns)\n    fig = go.Figure(\n        data=[\n            go.Table(\n                header=dict(values=columns, fill_color=\"paleturquoise\", align=\"left\"),\n                cells=dict(\n                    values=[data[col] for col in columns],\n                    fill_color=\"lavender\",\n                    align=\"left\",\n                ),\n            )\n        ]\n    )\n\n    layout_opts: dict = {\n        \"xaxis_title\": \"Time\",\n        \"yaxis_title\": \"Values\",\n        \"autosize\": True,\n        \"height\": 400,\n    }\n    # scrollbars should be visible:\n    fig.update_layout(margin=dict(l=0, r=15.0, b=15.0, t=5, pad=0))\n    fig.update_layout(**layout_opts)\n    fig.update_yaxes(automargin=True)\n    fig.update_xaxes(automargin=True)\n\n    return {\"table\": plotly_fig_to_json_dict(fig)}\n",
  "description": "Display DataFrame as table",
  "documentation": "# Display Table\n\n## Description\nDisplay a DataFrame as table.\n\n## Inputs\n* **data** (Pandas DataFrame): The data to be displayed.\n\n## Outputs\n* **table** (Plotly Json): The generated Plotly Json. This is used by the hetida designer frontend for plotting the results.\n\n## Details\nThe component generates a simple table of the provided data using Plotly.\n\n## Examples\nThe json input of a typical call of this component is\n```\n{\n\t\"data\": {\n        \"col_1\": [\"a\", \"a\", \"a\", \"b\", \"c\", \"d\", \"b\"],\n        \"col_2\": [2, 3, 2, 4, 4, 4, 4]\n    }\n}\n```\n",
  "id": "e0320729-10df-8979-4444-feb6fe7adc82",
  "io_interface": {
    "inputs": [
      {
        "data_type": "DATAFRAME",
        "id": "efe7365f-394f-8eb0-f5e5-a3738c77275c",
        "name": "data",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "PLOTLYJSON",
        "id": "2fbb93b4-ef48-7e25-04a8-056547fb5a1e",
        "name": "table"
      }
    ]
  },
  "name": "Display Table",
  "released_timestamp": "2022-02-09T17:33:30.368991+00:00",
  "revision_group_id": "e0320729-10df-8979-4444-feb6fe7adc82",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}