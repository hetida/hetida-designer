{
  "category": "Regression",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport datetime\nimport pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\n\n\ndef regression_linear(xs: pd.Series, ys: pd.Series):\n    \"\"\"Linear Regression for univariate Remaining Useful Life (RUL) prediction\n    \n    train-series: pd.Series with datetime index and float values. The input data to train\n        the regression model.\n    limit: the limit value against which rul should be made.\n    \n    returns: Tuple (pred_y, timestamp_limit_reached, intercept, slope)\n    \"\"\"\n\n    lg = LinearRegression()\n    lg.fit(xs.values.reshape(-1, 1), ys.values.reshape(-1, 1))\n    intercept, slope = lg.intercept_[0], lg.coef_[0]\n\n    preds = pd.Series(\n        lg.predict(xs.values.reshape(-1, 1)).reshape(1, -1)[0], index=xs.index\n    )\n\n    diffs = preds - ys\n\n    return preds, diffs, intercept, slope\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"x_values\": DataType.Series, \"y_values\": DataType.Series},\n    outputs={\"intercept\": DataType.Float, \"slope\": DataType.Float, \"preds\": DataType.Series, \"diffs\": DataType.Series},\n    component_name=\"Linear Regression two Series\",\n    description=\"Linear Regression between two series of values\",\n    category=\"Regression\",\n    uuid=\"ff182e84-913d-e799-5722-98a5d2e3ad09\",\n    group_id=\"ff182e84-913d-e799-5722-98a5d2e3ad09\",\n    tag=\"1.0.0\"\n)\ndef main(*, x_values, y_values):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    preds, diffs, intercept, slope = regression_linear(x_values, y_values)\n    return {\"diffs\": diffs, \"intercept\": intercept, \"slope\": slope, \"preds\": preds}\n",
  "description": "Linear Regression between two series of values",
  "documentation": "# Linear Regression two Series\n\n## Description\nLinear Regression between two series.\n\n## Inputs\n* **y_values** (Pandas Series): Y values for linear regression.\n* **x_values** (Pandas Series): X values for linear regression.\n\n## Outputs\n* **intercept** (Float): The intercept of the linear model.\n* **slope** (Float): The slope of the linear model.\n* **preds** (Pandas Series): Prediction values for every value of **x_values**.\n* **diffs** (Pandas Series): Differences between **preds** and **y_values**.\n\n## Details\nDo an ordinary linear regression of a 1-dimensional variable y on a 1-dimensional variable x.\n\n## Examples\nThe json input of a typical call of this component is\n```\n{\n    \"x_values\": {\n        \"2020-01-01T01:15:27.000Z\": 1,\n        \"2020-01-03T08:20:03.000Z\": 2,\n        \"2020-01-03T08:20:04.000Z\": 3,\n        \"2020-01-03T08:20:05.000Z\": 4\n    },\n    \"y_values\": {\n        \"2020-01-01T01:15:27.000Z\": 5,\n        \"2020-01-03T08:20:03.000Z\": 6,\n        \"2020-01-03T08:20:04.000Z\": 9,\n        \"2020-01-03T08:20:05.000Z\": 8\n    }\n}\n```\n\n",
  "id": "ff182e84-913d-e799-5722-98a5d2e3ad09",
  "io_interface": {
    "inputs": [
      {
        "data_type": "SERIES",
        "id": "0c1fe181-983a-d47c-3f00-4dd11fa2288e",
        "name": "x_values"
      },
      {
        "data_type": "SERIES",
        "id": "0092ff94-8992-32a3-b75e-0b5b13fd0d82",
        "name": "y_values"
      }
    ],
    "outputs": [
      {
        "data_type": "FLOAT",
        "id": "294b70a6-9aee-4d56-b373-c78b0580fd96",
        "name": "intercept"
      },
      {
        "data_type": "FLOAT",
        "id": "cc2c36a9-5d82-6214-1d83-384547929837",
        "name": "slope"
      },
      {
        "data_type": "SERIES",
        "id": "7dbe6575-e730-620f-36c9-6e1ff7188ffd",
        "name": "preds"
      },
      {
        "data_type": "SERIES",
        "id": "6ec76bd5-ec12-ea11-51e9-c505fae9e295",
        "name": "diffs"
      }
    ]
  },
  "name": "Linear Regression two Series",
  "released_timestamp": "2022-02-09T17:33:29.322055+00:00",
  "revision_group_id": "ff182e84-913d-e799-5722-98a5d2e3ad09",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}