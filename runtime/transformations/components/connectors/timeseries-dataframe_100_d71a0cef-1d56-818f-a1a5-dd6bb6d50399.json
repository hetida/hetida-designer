{
  "category": "Connectors",
  "content": "\"\"\"Documentation for Timeseries Dataframe\n\nCreates (or appends to) a multi-timeseries dataframe. The result is a dataframe with 3 columns of the form:\n\n```\n{\n    \"value\": [\n        1.0,\n        1.2,\n        0.5,\n        1.9,\n        1.3,\n        0.2,\n        1.5,\n        1.7,\n        0.1\n    ],\n    \"metric\": [\n        \"a\",\n        \"b\",\n        \"c\",\n        \"a\",\n        \"b\",\n        \"c\",\n        \"a\",\n        \"b\",\n        \"c\"\n    ],\n    \"timestamp\": [\n        \"2019-08-01T15:45:36.000Z\",\n        \"2019-08-01T15:45:36.000Z\",\n        \"2019-08-01T15:45:36.000Z\",\n        \"2019-08-02T15:45:36.000Z\",\n        \"2019-08-02T15:45:36.000Z\",\n        \"2019-08-02T15:45:36.000Z\",\n        \"2019-08-03T15:45:36.000Z\",\n        \"2019-08-03T15:45:36.000Z\",\n        \"2019-08-03T15:45:36.000Z\"\n    ]\n}\n```\n\nInput to **df_or_series** can be either such a dataframe or a series (with datetime index).\n\"\"\"\n\n# add your own imports here, e.g.\nimport pandas as pd\n\n#     import numpy as np\n\n\ndef generate_next_metric_name(df):\n    i = 0\n    existing_metrics = set(df[\"metric\"].unique().tolist())\n    while True:\n        name = \"metric_\" + str(i)\n        if not name in existing_metrics:\n            break\n        i = i + 1\n\n    return name\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"df_or_series\": {\"data_type\": \"ANY\"},\n        \"series_to_add\": {\"data_type\": \"SERIES\"},\n    },\n    \"outputs\": {\n        \"timeseries_df\": {\"data_type\": \"DATAFRAME\"},\n    },\n    \"name\": \"Timeseries Dataframe\",\n    \"category\": \"Connectors\",\n    \"description\": \"Create and/or append to a multi-timeseries dataframe\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"d71a0cef-1d56-818f-a1a5-dd6bb6d50399\",\n    \"revision_group_id\": \"d71a0cef-1d56-818f-a1a5-dd6bb6d50399\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:34.924037+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, df_or_series, series_to_add):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n\n    if series_to_add.name is None or series_to_add.name is None:\n        name = generate_next_metric_name(df_or_series)\n    else:\n        name = series_to_add.name\n\n    if isinstance(df_or_series, pd.DataFrame):\n        return {\n            \"timeseries_df\": pd.concat(\n                [\n                    df_or_series,\n                    pd.DataFrame(\n                        {\n                            \"timestamp\": series_to_add.index,\n                            \"value\": series_to_add.values,\n                            \"metric\": name,\n                        }\n                    ),\n                ],\n                ignore_index=True,\n            )\n        }\n    else:\n        return {\n            \"timeseries_df\": pd.concat(\n                [\n                    pd.DataFrame(\n                        {\n                            \"timestamp\": df_or_series.index,\n                            \"value\": df_or_series.values,\n                            \"metric\": (\n                                df_or_series.name\n                                if df_or_series.name is not None\n                                else \"metric_0\"\n                            ),\n                        }\n                    ),\n                    pd.DataFrame(\n                        {\n                            \"timestamp\": series_to_add.index,\n                            \"value\": series_to_add.values,\n                            \"metric\": name,\n                        }\n                    ),\n                ],\n                ignore_index=True,\n            )\n        }\n\n\nTEST_WIRING_FROM_PY_FILE_IMPORT = {}\nRELEASE_WIRING = {}\n",
  "description": "Create and/or append to a multi-timeseries dataframe",
  "documentation": "Creates (or appends to) a multi-timeseries dataframe. The result is a dataframe with 3 columns of the form:\n\n```\n{\n    \"value\": [\n        1.0,\n        1.2,\n        0.5,\n        1.9,\n        1.3,\n        0.2,\n        1.5,\n        1.7,\n        0.1\n    ],\n    \"metric\": [\n        \"a\",\n        \"b\",\n        \"c\",\n        \"a\",\n        \"b\",\n        \"c\",\n        \"a\",\n        \"b\",\n        \"c\"\n    ],\n    \"timestamp\": [\n        \"2019-08-01T15:45:36.000Z\",\n        \"2019-08-01T15:45:36.000Z\",\n        \"2019-08-01T15:45:36.000Z\",\n        \"2019-08-02T15:45:36.000Z\",\n        \"2019-08-02T15:45:36.000Z\",\n        \"2019-08-02T15:45:36.000Z\",\n        \"2019-08-03T15:45:36.000Z\",\n        \"2019-08-03T15:45:36.000Z\",\n        \"2019-08-03T15:45:36.000Z\"\n    ]\n}\n```\n\nInput to **df_or_series** can be either such a dataframe or a series (with datetime index).",
  "id": "d71a0cef-1d56-818f-a1a5-dd6bb6d50399",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "828db7a9-114e-3e6d-0ac7-3965b0ca81ff",
        "name": "df_or_series",
        "type": "REQUIRED"
      },
      {
        "data_type": "SERIES",
        "id": "762dcbc8-5460-c8fe-8bdf-22747f3269ff",
        "name": "series_to_add",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "DATAFRAME",
        "id": "37b34461-8b5e-ce1e-6f8f-2a225490e07d",
        "name": "timeseries_df"
      }
    ]
  },
  "name": "Timeseries Dataframe",
  "release_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "released_timestamp": "2022-02-09T17:33:34.924037+00:00",
  "revision_group_id": "d71a0cef-1d56-818f-a1a5-dd6bb6d50399",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}