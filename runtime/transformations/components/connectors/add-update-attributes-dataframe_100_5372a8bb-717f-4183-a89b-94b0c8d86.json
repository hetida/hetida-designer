{
    "id": "5372a8bb-717f-4183-a89b-94b0c8d8693a",
    "revision_group_id": "4a7450b3-c462-4c11-ab5b-faab1b3010a5",
    "name": "Add/Update Attributes (DataFrame)",
    "description": "Add attributes to a dataframe or update attributes of a dataframe",
    "category": "Connectors",
    "version_tag": "1.0.0",
    "released_timestamp": "2022-06-27T16:05:43.561302+00:00",
    "state": "RELEASED",
    "type": "COMPONENT",
    "documentation": "# Add/Update Attributes\n\n## Description\nAdd attributes to a dataframe or update attributes of a dataframe.\n\n## Inputs\n* **dataframe** (Pandas DataFrame): The input DataFrame.\n* **attributes** (Any): A dictionary with string keys to be added to the input DataFrame.\n\n## Outputs\n* **dataframe** (Pandas DataFrame): The input DataFrame with added attributes.\n\n## Details\nAdds attributes to a dataframe. Adding an attribute with a key, that is already included in the attributes of the dataframe, will update the corresponding value.\n\n**Note:** Selecting \"Only Output\" for the output dataframe means that it is wired to the \"direct provisioning\" adapter, which sends the data as a stream of records in the response to be displayed in the browser window, but not the attributes. To access the attributes, use the \"Extract Attributes (DataFrame)\" component.\n \n**Note:** When wired to a generic REST adapter, the attributes are sent base64-encoded with the key \"Data-Attributes\" in the header. To process the attributes, the adapter should be implemented accordingly.",
    "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"dataframe\": \"DATAFRAME\",\n        \"attributes\": \"ANY\",\n    },\n    \"outputs\": {\n        \"dataframe\": \"DATAFRAME\",\n    },\n    \"name\": \"Add/Update Attributes (DataFrame)\",\n    \"category\": \"Connectors\",\n    \"description\": \"Add attributes to a dataframe or update attributes of a dataframe\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"5372a8bb-717f-4183-a89b-94b0c8d8693a\",\n    \"revision_group_id\": \"4a7450b3-c462-4c11-ab5b-faab1b3010a5\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-06-27T16:05:43.555802+00:00\"\n}\n\n\ndef main(*, dataframe, attributes):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    dataframe.attrs.update(attributes)\n\n    return {\"dataframe\": dataframe}\n",
    "io_interface": {
        "inputs": [
            {
                "id": "b2a9b49b-1bbd-4245-8a3b-d37758a481bc",
                "name": "dataframe",
                "data_type": "DATAFRAME"
            },
            {
                "id": "0f1a57e6-57f8-40b0-bb1e-bedf75df56c2",
                "name": "attributes",
                "data_type": "ANY"
            }
        ],
        "outputs": [
            {
                "id": "012f9b19-4718-4eef-84e0-fc387e036fbf",
                "name": "dataframe",
                "data_type": "DATAFRAME"
            }
        ]
    },
    "test_wiring": {
        "input_wirings": [
            {
                "workflow_input_name": "dataframe",
                "adapter_id": "direct_provisioning",
                "filters": {
                    "value": "{\n    \"column1\": {\n        \"2019-08-01T15:45:36.000Z\": 1,\n        \"2019-08-02T11:33:41.000Z\": 2\n    },\n    \"column2\": {\n        \"2019-08-01T15:45:36.000Z\": 1.3,\n        \"2019-08-02T11:33:41.000Z\": 2.8\n    }\n}"
                }
            },
            {
                "workflow_input_name": "attributes",
                "adapter_id": "direct_provisioning",
                "filters": {
                    "value": "{\n    \"a\": true,\n    \"b\": 31.56\n}"
                }
            }
        ],
        "output_wirings": [
            {
                "workflow_output_name": "dataframe",
                "adapter_id": "demo-adapter-python",
                "ref_id": "root.plantA.alerts",
                "ref_id_type": "SINK",
                "type": "dataframe"
            }
        ]
    }
}