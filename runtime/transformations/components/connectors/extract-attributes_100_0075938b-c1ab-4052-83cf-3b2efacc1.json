{
    "id": "0075938b-c1ab-4052-83cf-3b2efacc1f84",
    "revision_group_id": "d8930aed-646a-4aa5-a5c4-b5ed644de646",
    "name": "Extract Attributes",
    "description": "Extract attributes from a dataframe",
    "category": "Connectors",
    "version_tag": "1.0.0",
    "released_timestamp": "2022-06-01T13:36:43.630216+00:00",
    "state": "RELEASED",
    "type": "COMPONENT",
    "documentation": "# Extract Attributes\n\n## Description\nExtract attributes from a dataframe.\n\n## Inputs\n* **dataframe** (Pandas DataFrame): The input DataFrame.\n\n## Outputs\n* **attributes** (Any): A dictionary containing the attributes of the dataframe.\n\n## Details\n**Note**: It is not possible to provide a dataframe with attributes via manual input. To add or update the attributes of a dataframe, use the \"Add/Update Attributes\" component.\n \n**Note:** When wired to a generic REST adapter, attributes are expected to be sent base64-encoded with the key \"DataframeAttributes\" in the header. To process the attributes, the adapter should be implemented accordingly.",
    "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"dataframe\": DataType.DataFrame},\n    outputs={\"attributes\": DataType.Any},\n    name=\"Extract Attributes\",\n    description=\"Extract attributes from a dataframe\",\n    category=\"Connectors\",\n    id=\"0075938b-c1ab-4052-83cf-3b2efacc1f84\",\n    revision_group_id=\"d8930aed-646a-4aa5-a5c4-b5ed644de646\",\n    version_tag=\"1.0.0\"\n)\ndef main(*, dataframe):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    \n    return {\"attributes\": dataframe.attrs}\n",
    "io_interface": {
        "inputs": [
            {
                "id": "774a8875-b1d4-42d6-8df5-75ad73e468d9",
                "name": "dataframe",
                "data_type": "DATAFRAME"
            }
        ],
        "outputs": [
            {
                "id": "95a9eec2-681a-4972-8acb-734c96988a8e",
                "name": "attributes",
                "data_type": "ANY"
            }
        ]
    },
    "test_wiring": {
        "input_wirings": [
            {
                "workflow_input_name": "dataframe",
                "adapter_id": "demo-adapter-python",
                "ref_id": "root.plantA.maintenance_events",
                "ref_id_type": "SOURCE",
                "type": "dataframe",
                "filters": {}
            }
        ],
        "output_wirings": []
    }
}