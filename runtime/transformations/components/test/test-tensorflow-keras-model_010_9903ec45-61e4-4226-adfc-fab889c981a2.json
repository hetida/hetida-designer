{
  "category": "Test",
  "content": "import numpy as np\nimport plotly.graph_objects as go\nimport plotly.io as pio\n\nfrom hetdesrun.utils import plotly_fig_to_json_dict\n\n\npio.templates.default = None\n\n\ndef f(x):\n    y = x**2 + 2*x - 5\n    return y\n\n\ndef plot_preds(x, y, f, model, title) -> go.Figure:\n    fig = go.Figure()\n\n    fig.add_trace(go.Scatter(x=x,y=y,mode=\"markers\",name=\"Data\"))\n    fig.add_trace(go.Scatter(x=np.sort(x),y=f(np.sort(x)),mode=\"lines\",name=\"Ground truth\"))\n    fig.add_trace(go.Scatter(x=np.sort(x),y=model(np.sort(x)),mode=\"lines\",name=\"Predictions\"))\n    \n    # Set the layout.\n    fig.update_layout(**{\n        \"autosize\": True,\n        \"height\": 200,\n    })\n\n    # Set margins.\n    fig.update_layout(margin=dict(l=0, r=0, b=0, t=5, pad=0))\n    fig.update_yaxes(automargin=True)\n    fig.update_xaxes(automargin=True)\n\n    return fig\n\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"x\": \"SERIES\",\n        \"y\": \"SERIES\",\n        \"tensorflow_keras_model\": \"ANY\",\n    },\n    \"outputs\": {\n        \"plot\": \"PLOTLYJSON\",\n    },\n    \"name\": \"Test Tensorflow Keras Model\",\n    \"category\": \"Test\",\n    \"description\": \"Test and plot a simple tensorflow keras model\",\n    \"version_tag\": \"0.1.0\",\n    \"id\": \"9903ec45-61e4-4226-adfc-fab889c981a2\",\n    \"revision_group_id\": \"03927ed2-e753-4210-bfaf-e37dd7b02d51\",\n    \"state\": \"DRAFT\",\n}\n\n\ndef main(*, x, y, tensorflow_keras_model):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # Create a basic model instance\n    # raise ValueError(f\"x has type {type(x)} and contains {len(x.values)} values\")\n    return {\"plot\": plotly_fig_to_json_dict(plot_preds(x.values, y.values, f, tensorflow_keras_model, 'After Training: Keras'))}",
  "description": "Test and plot a simple tensorflow keras model",
  "documentation": "# Test Tensorflow Keras Model\n\n## Description\nTest and plot a simple tensorflow keras model based on an example in the tensorflow tutorial: https://www.tensorflow.org/guide/basics\n\n## Inputs\n* **x** (Pandas Series): Inputs / Features\n* **y** (Pandas Series): Outputs / Labels\n* **tensorflow_keras_model** (Any): The trained model, i.e. an object of the class `tf.keras.models.Model` or `tf.keras.models.Sequential`, e.g. from the component \"Train Tensorflow Keras Model\" or from a stored object.\n \n## Outputs\n* **plot** (Plotly JSON): The generated Plotly JSON. This is used by the hetida designer frontend for plotting the results.\n\n## Details\n\nThis workflow cannot be executed with manual input. It is intended to be used with stored objects or in another workflow.",
  "id": "9903ec45-61e4-4226-adfc-fab889c981a2",
  "io_interface": {
    "inputs": [
      {
        "data_type": "SERIES",
        "id": "55cf3ea6-0b4f-46b1-ac10-2f077259e63c",
        "name": "x"
      },
      {
        "data_type": "SERIES",
        "id": "89c6ab99-dbff-46dc-9657-9f46a1a31604",
        "name": "y"
      },
      {
        "data_type": "ANY",
        "id": "e5f93ef5-0d2d-4198-8369-b57d144aa638",
        "name": "tensorflow_keras_model"
      }
    ],
    "outputs": [
      {
        "data_type": "PLOTLYJSON",
        "id": "3d03ccb1-d23f-4c3f-9c0f-1d1869651384",
        "name": "plot"
      }
    ]
  },
  "name": "Test Tensorflow Keras Model",
  "revision_group_id": "03927ed2-e753-4210-bfaf-e37dd7b02d51",
  "state": "DRAFT",
  "test_wiring": {
    "input_wirings": [
      {
        "adapter_id": "direct_provisioning",
        "filters": {
          "value": "[\n    -2.0,\n    -1.98,\n    -1.96,\n    -1.9,\n    -1.9,\n    -1.0,\n    -1.8,\n    -1.8,\n    -1.8,\n    -1.8,\n    -1.0,\n    -1.7,\n    -1.76,\n    -1.74,\n    -1.72,\n    -1.0,\n    -1.6,\n    -1.6,\n    -1.6,\n    -1.6,\n    -1.0,\n    -1.5,\n    -1.5,\n    -1.5,\n    -1.52,\n    -1.0,\n    -1.48,\n    -1.4,\n    -1.4,\n    -1.4,\n    -1.0,\n    -1.3,\n    -1.3,\n    -1.3,\n    -1.3,\n    -1.0,\n    -1.28,\n    -1.26,\n    -1.24,\n    -1.2,\n    -1.0,\n    -1.1,\n    -1.1,\n    -1.1,\n    -1.1,\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.04,\n    -1.02,\n    -1.0,\n    -0.9,\n    -0.9,\n    -0.9,\n    -0.9,\n    -0.0,\n    -0.8,\n    -0.8,\n    -0.8,\n    -0.8,\n    -0.0,\n    -0.78,\n    -0.76,\n    -0.7,\n    -0.7,\n    -0.0,\n    -0.6,\n    -0.6,\n    -0.6,\n    -0.6,\n    -0.0,\n    -0.5,\n    -0.56,\n    -0.54,\n    -0.52,\n    -0.0,\n    -0.4,\n    -0.4,\n    -0.4,\n    -0.4,\n    -0.0,\n    -0.3,\n    -0.3,\n    -0.3,\n    -0.32,\n    -0.0,\n    -0.28,\n    -0.2,\n    -0.2,\n    -0.2,\n    -0.0,\n    -0.1,\n    -0.1,\n    -0.1,\n    -0.1,\n    -0.0,\n    -0.08,\n    -0.06,\n    -0.04,\n    -0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.1,\n    0.1,\n    0.16,\n    0.18,\n    0.0,\n    0.2,\n    0.2,\n    0.2,\n    0.2,\n    0.0,\n    0.3,\n    0.3,\n    0.3,\n    0.3,\n    0.0,\n    0.42,\n    0.44,\n    0.4,\n    0.4,\n    0.0,\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.0,\n    0.6,\n    0.64,\n    0.66,\n    0.68,\n    0.0,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.0,\n    0.8,\n    0.8,\n    0.8,\n    0.88,\n    0.0,\n    0.92,\n    0.9,\n    0.9,\n    0.9,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.12,\n    1.14,\n    1.16,\n    1.1,\n    1.0,\n    1.2,\n    1.2,\n    1.2,\n    1.2,\n    1.0,\n    1.3,\n    1.3,\n    1.36,\n    1.38,\n    1.0,\n    1.4,\n    1.4,\n    1.4,\n    1.4,\n    1.0,\n    1.5,\n    1.5,\n    1.5,\n    1.5,\n    1.0,\n    1.62,\n    1.64,\n    1.6,\n    1.6,\n    1.0,\n    1.7,\n    1.7,\n    1.7,\n    1.7,\n    1.0,\n    1.8,\n    1.84,\n    1.86,\n    1.88,\n    1.0,\n    1.9,\n    1.9,\n    1.9,\n    1.9,\n    2.0\n]\n"
        },
        "workflow_input_name": "x"
      },
      {
        "adapter_id": "direct_provisioning",
        "filters": {
          "value": "[\n    -5.366558,\n    -5.981307,\n    -3.873446,\n    -5.149205,\n    -5.729736,\n    -7.51883,\n    -4.48291,\n    -5.96046,\n    -6.925682,\n    -5.311885,\n    -6.366703,\n    -5.310418,\n    -5.9576,\n    -3.601407,\n    -4.58477,\n    -3.384733,\n    -6.57554,\n    -5.15758,\n    -6.557071,\n    -4.768587,\n    -5.900264,\n    -5.40234,\n    -4.45489,\n    -7.086054,\n    -4.307995,\n    -3.996616,\n    -5.42656,\n    -5.78001,\n    -5.137527,\n    -5.542825,\n    -6.10002,\n    -6.436139,\n    -5.543039,\n    -7.61365,\n    -8.965363,\n    -5.71536,\n    -5.82380,\n    -5.32316,\n    -7.114271,\n    -4.05017,\n    -6.038288,\n    -6.285008,\n    -4.61531,\n    -5.36244,\n    -5.64645,\n    -7.96895,\n    -5.507251,\n    -5.175342,\n    -5.16673,\n    -4.51635,\n    -5.805446,\n    -6.265417,\n    -5.422339,\n    -5.82475,\n    -6.61407,\n    -6.01081,\n    -6.059127,\n    -5.973969,\n    -6.09296,\n    -6.430083,\n    -5.535024,\n    -4.04578,\n    -6.476226,\n    -6.295669,\n    -4.832078,\n    -6.16147,\n    -6.76922,\n    -6.865404,\n    -6.184081,\n    -6.882485,\n    -6.94538,\n    -6.59749,\n    -4.818707,\n    -6.312218,\n    -7.52520,\n    -6.051738,\n    -4.08976,\n    -4.899183,\n    -6.68229,\n    -5.71965,\n    -6.050102,\n    -4.822754,\n    -6.71583,\n    -5.973388,\n    -5.83919,\n    -5.34624,\n    -6.283054,\n    -5.07066,\n    -6.49913,\n    -3.806258,\n    -5.50281,\n    -5.69797,\n    -5.03977,\n    -5.031806,\n    -2.807250,\n    -7.12725,\n    -8.00837,\n    -6.003919,\n    -5.418058,\n    -5.237642,\n    -5.69597,\n    -3.693537,\n    -4.97744,\n    -3.965398,\n    -3.488362,\n    -5.694204,\n    -4.80090,\n    -3.873430,\n    -4.58712,\n    -4.81329,\n    -4.152368,\n    -6.32299,\n    -6.43955,\n    -4.284577,\n    -2.681295,\n    -4.436465,\n    -4.573965,\n    -5.647080,\n    -3.635,\n    -4.173970,\n    -4.862393,\n    -3.52298,\n    -3.214010,\n    -4.13483,\n    -3.510762,\n    -4.124222,\n    -4.00034,\n    -3.344591,\n    -3.377674,\n    -3.886976,\n    -3.263530,\n    -3.699594,\n    -4.12455,\n    -2.342364,\n    -4.09383,\n    -4.005367,\n    -2.440427,\n    -3.110468,\n    -1.841208,\n    -3.98875,\n    -3.700448,\n    -2.80414,\n    -2.214243,\n    -2.343202,\n    -2.340729,\n    -2.249363,\n    -2.46386,\n    -1.311267,\n    -4.281220,\n    0.5282807,\n    -3.287945,\n    -1.445979,\n    -1.429828,\n    -1.155753,\n    -2.543873,\n    -1.572101,\n    -0.2858849,\n    0.0770527,\n    -1.573378,\n    -3.29910,\n    0.1987136,\n    -0.1110670,\n    -1.810888,\n    -1.73918,\n    -1.516052,\n    0.5433,\n    0.0628575,\n    -1.394310,\n    0.2393377,\n    -1.483486,\n    -1.085545,\n    0.4148351,\n    1.338001,\n    0.462917,\n    0.7737664,\n    0.199636,\n    -0.3201829,\n    -0.3753451,\n    0.2987999,\n    -0.2541420,\n    0.3914196,\n    0.727634,\n    0.652894,\n    -0.8424457,\n    -0.1324678,\n    0.993542,\n    2.021085,\n    2.828193,\n    2.628906,\n    2.975105,\n    1.969212,\n    1.736406,\n    1.543153,\n    -0.0570523,\n    3.284850,\n    4.079328,\n    5.625858,\n    2.449412,\n    2.109135,\n    3.01038,\n    1.882396\n]\n"
        },
        "workflow_input_name": "y"
      },
      {
        "adapter_id": "blob-storage-adapter",
        "filters": {},
        "ref_id": "planta-millingunit/Outfeed/Anomalies",
        "ref_id_type": "THINGNODE",
        "ref_key": "Anomalies - 2023-03-21 15:19:13+00:00 - 13ac8b05-42a6-4123-a852-d228f43c1f03",
        "type": "metadata(any)",
        "workflow_input_name": "tensorflow_keras_model"
      }
    ],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "0.1.0"
}