{
  "category": "Test",
  "content": "import pandas as pd\nimport tensorflow as tf\n\n\n@tf.function\ndef test_model(images, labels, model):\n    loss_object = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)\n    # training=False is only needed if there are layers with different\n    # behavior during training versus inference (e.g. Dropout).\n    predictions = model(images, training=False)\n    t_loss = loss_object(labels, predictions)\n\n    return t_loss, predictions\n\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"model\": \"ANY\",\n    },\n    \"outputs\": {\n        \"result\": \"ANY\",\n    },\n    \"name\": \"Test VariationalAutoEncoder\",\n    \"category\": \"Test\",\n    \"description\": \"Test VariationalAutoEncoder\",\n    \"version_tag\": \"0.1.0\",\n    \"id\": \"828980c2-97b9-4e36-807e-2d249d571092\",\n    \"revision_group_id\": \"c50b83be-0242-499e-9593-d760a119b4c7\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2023-03-22T18:04:26.743765+00:00\",\n}\n\n\ndef main(*, model):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    _, (x_test, y_test) = tf.keras.datasets.mnist.load_data()\n    x_test = x_test / 255.0\n\n    # Add a channels dimension\n    x_test = x_test[..., tf.newaxis].astype(\"float32\")\n\n    test_ds = tf.data.Dataset.from_tensor_slices((x_test, y_test)).batch(32)\n\n    test_loss = tf.keras.metrics.Mean(name='test_loss')\n    test_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='test_accuracy')\n\n    test_loss.reset_states()\n    test_accuracy.reset_states()\n    \n    for test_images, test_labels in test_ds:\n        t_loss, predictions = test_model(test_images, test_labels, model)\n        test_loss(t_loss)\n        test_accuracy(test_labels, predictions)\n\n    return {\n        \"result\": {\n            \"Loss\": test_loss.result(),\n            \"Accuracy\": test_accuracy.result() * 100\n        }\n    }",
  "description": "Test VariationalAutoEncoder",
  "documentation": "# New Component/Workflow\n## Description\n## Inputs\n## Outputs\n## Details\n## Examples\n",
  "id": "828980c2-97b9-4e36-807e-2d249d571092",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "692e9ea1-392a-454e-81e1-f470e64e7cc0",
        "name": "model"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "31ee028f-2f04-405c-a984-eaff2296c4a6",
        "name": "result"
      }
    ]
  },
  "name": "Test VariationalAutoEncoder",
  "released_timestamp": "2023-03-22T18:04:26.743765+00:00",
  "revision_group_id": "c50b83be-0242-499e-9593-d760a119b4c7",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [
      {
        "adapter_id": "blob-storage-adapter",
        "filters": {},
        "ref_id": "plantb/MillingUnit/Outfeed/Anomalies",
        "ref_id_type": "THINGNODE",
        "ref_key": "Anomalies - 2023-03-22 09:19:05+00:00 - 709b9d3a-e4d3-41b1-8fb0-008b11059549",
        "type": "metadata(any)",
        "workflow_input_name": "model"
      }
    ],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "0.1.0"
}