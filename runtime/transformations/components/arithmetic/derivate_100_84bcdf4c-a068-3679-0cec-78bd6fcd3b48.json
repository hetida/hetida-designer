{
  "category": "Arithmetic",
  "content": "from hetdesrun.component.registration import register\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"data\": {\"data_type\": \"SERIES\"},\n    },\n    \"outputs\": {\n        \"diff_quo\": {\"data_type\": \"SERIES\"},\n    },\n    \"name\": \"Derivate\",\n    \"category\": \"Arithmetic\",\n    \"description\": \"Calculates the difference quotient of a Series\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"84bcdf4c-a068-3679-0cec-78bd6fcd3b48\",\n    \"revision_group_id\": \"84bcdf4c-a068-3679-0cec-78bd6fcd3b48\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:31.889748+00:00\",\n}\n\n\ndef main(*, data):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    if (data.size) < 2:\n        raise ValueError(\"size of data must be at least 2\")\n\n    data_dropna = data.dropna()\n\n    if pd.api.types.is_numeric_dtype(data_dropna.index.dtype):\n        data_dropna = data_dropna.sort_index()\n        x = data_dropna.index\n\n    else:\n        try:\n            data_dropna.index = pd.to_datetime(data_dropna.index)\n        except (ValueError, TypeError):\n            raise TypeError(\"indices of data must be numeric or datetime\")\n        data_dropna = data_dropna.sort_index()\n        x = (data_dropna.index - data_dropna.index[0]).total_seconds()\n\n    y = data_dropna.values\n\n    x_diff = np.ediff1d(x)\n    y_diff = np.ediff1d(y)\n    \n    return {\"diff_quo\": pd.Series(y_diff / x_diff, index=data_dropna.index[1:])}\n\n",
  "description": "Calculates the difference quotient of a Series",
  "documentation": "# Derivate\n\n## Description\nThe component calculates the difference quotient.\n\n## Inputs\n* **data** (Pandas Series): The indices must be numeric or datetimes, the values must be numeric.\n\n## Outputs\n* **diff_quo** (Pandas Series): The difference quotient of data.\n\n## Details\nThe component calculates the difference quotient of data, sorted by its index. It ignores NaN values. \nIf the indices are datetimes, their distances are expressed in seconds.\nEach difference quotient is given to the greater index.\n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.3,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 0.3,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.5\n\t}\n}\n```\nThe expected output is\n```\n\t\"diff_quo\": {\n\t\t\t\"2019-08-01T15:20:25\": -0.2,\n\t\t\t\"2019-08-01T15:20:30\": 0.04\n\t\t}\n```\n",
  "id": "84bcdf4c-a068-3679-0cec-78bd6fcd3b48",
  "io_interface": {
    "inputs": [
      {
        "data_type": "SERIES",
        "id": "5b9a025d-86aa-ae5c-61c3-f37e83852de2",
        "name": "data",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "SERIES",
        "id": "4ea5db5c-893a-c273-b696-c68463f6cdc2",
        "name": "diff_quo"
      }
    ]
  },
  "name": "Derivate",
  "released_timestamp": "2022-02-09T17:33:31.889748+00:00",
  "revision_group_id": "84bcdf4c-a068-3679-0cec-78bd6fcd3b48",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}