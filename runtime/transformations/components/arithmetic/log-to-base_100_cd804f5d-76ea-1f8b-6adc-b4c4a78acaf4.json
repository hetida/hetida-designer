{
  "category": "Arithmetic",
  "content": "import pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"base\": {\"data_type\": \"ANY\"},\n        \"data\": {\"data_type\": \"ANY\"},\n    },\n    \"outputs\": {\n        \"log\": {\"data_type\": \"ANY\"},\n    },\n    \"name\": \"Log to base\",\n    \"category\": \"Arithmetic\",\n    \"description\": \"Takes the logarithm of data to some given base\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"cd804f5d-76ea-1f8b-6adc-b4c4a78acaf4\",\n    \"revision_group_id\": \"cd804f5d-76ea-1f8b-6adc-b4c4a78acaf4\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T17:33:31.861302+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, base, data):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n    return {\"log\": np.log(data) / np.log(base)}\n",
  "description": "Takes the logarithm of data to some given base",
  "documentation": "# Log to base\n\n## Description\nThis component calculates the logarithm to some given base.\n\n## Inputs\n* **base** (Integer, Float, Pandas Series or Pandas DataFrame): Entries must be numeric.\n* **data** (Integer, Float, Pandas Series or Pandas DataFrame): Entries must be numeric.\n\n## Outputs\n* **log** (Integer, Float, Pandas Series or Pandas DataFrame): Logarithm of data to the given base.\n\n## Details\nThe component calculates the logarithm of data to some given base. \n\n## Examples\nThe json input of a typical call of this component with two Pandas Series is\n```\n{\n\t\"base\": {\n\t\t\t\t\"2019-08-01T15:20:12\": 2,\n\t\t\t\t\"2019-08-01T15:44:12\": 3,\n\t\t\t\t\"2019-08-03T16:20:15\": 4,\n\t\t\t\t\"2019-08-05T12:00:34\": 10,\n                \t\t\"2019-08-07T11:01:00\": 100\n\t},\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:12\": 16,\n\t\t\t\t\"2019-08-01T15:44:12\": 243,\n\t\t\t\t\"2019-08-03T16:20:15\": 2,\n\t\t\t\t\"2019-08-05T12:00:34\": 10000    \n\t}\n}\n```\nThe expected output is\n```\n\t\"log\": {\n\t\t\t\"2019-08-01T15:20:12\": 4,\n\t\t\t\"2019-08-01T15:44:12\": 5,\n\t\t\t\"2019-08-03T16:20:15\": 0.5,\n\t\t\t\"2019-08-05T12:00:34\": 4,\n          \t\t\"2019-08-07T11:01:00\": null  \n\t}\n\n```\n\nThe json input of a typical call of this component with a Float and a Pandas DataFrame is\n```\n{\n    \"base\": 2\n    \"data\": {\n\t\t\t\t\"a\": {\n                \t\t\t\"2019-08-01T15:20:12\": 1,\n\t\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\t\"2019-08-03T16:20:15\": 16,\n\t\t\t\t\t\"2019-08-05T12:00:34\": 2\n\t\t\t\t},\n\t\t\t\t\"b\": {\n\t\t\t\t\t\"2019-08-01T15:20:12\": 4,\n\t\t\t\t\t\"2019-08-01T15:44:12\": 8,\n\t\t\t\t\t\"2019-08-03T16:20:15\": 2,\n\t\t\t\t\t\"2019-08-05T12:00:34\": 2\n\t\t\t\t}\n\t}\n}\n```\nThe expected output is\n```\n\t\"log\": {\n\t\t\t\"a\": {\n               \t\t\"2019-08-01T15:20:12\": 0,\n\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\"2019-08-03T16:20:15\": 8,\n\t\t\t\t\"2019-08-05T12:00:34\": 1\n             },\n            \"b\": {\n                \t\t \"2019-08-01T15:20:12\": 2,\n\t\t\t\t \"2019-08-01T15:44:12\": 3,\n\t\t\t\t \"2019-08-03T16:20:15\": 1,\n\t\t\t\t \"2019-08-05T12:00:34\": 1\n             }\n\t}\n```\n",
  "id": "cd804f5d-76ea-1f8b-6adc-b4c4a78acaf4",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "e123c91c-496f-b727-af82-1715599b24c4",
        "name": "base",
        "type": "REQUIRED"
      },
      {
        "data_type": "ANY",
        "id": "db594bb9-ca83-e915-ca26-db1b28c56869",
        "name": "data",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "cd1bdf43-4863-2566-0847-3872934d24a1",
        "name": "log"
      }
    ]
  },
  "name": "Log to base",
  "released_timestamp": "2022-02-09T17:33:31.861302+00:00",
  "revision_group_id": "cd804f5d-76ea-1f8b-6adc-b4c4a78acaf4",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}