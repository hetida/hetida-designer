{
  "category": "Arithmetic",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Any},\n    outputs={\"cum_sum\": DataType.Any},\n    component_name=\"Cumulative sum\",\n    description=\"Calculates the cumulative sum of a Series or DataFrame\",\n    category=\"Arithmetic\",\n    uuid=\"d2cc4c0d-303e-b0ad-fdba-73392e890b30\",\n    group_id=\"d2cc4c0d-303e-b0ad-fdba-73392e890b30\",\n    tag=\"1.0.0\"\n)\ndef main(*, data):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your code here.\n\n    if pd.api.types.is_numeric_dtype(data.index.dtype):\n        data_sort = data.sort_index()\n\n    else:\n        try:\n            data.index = pd.to_datetime(data.index)\n\n        except (ValueError, TypeError):\n            raise TypeError(\"indices of data must be numeric or datetime\")\n        data_sort = data.sort_index()\n    return {\"cum_sum\": data_sort.cumsum()}\n",
  "description": "Calculates the cumulative sum of a Series or DataFrame",
  "documentation": "# Cumulative sum\n\n## Description\nThe component calculates the cumulative sum.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): The indices must be numeric or datetimes, the values must be numeric.\n\n## Outputs\n* **cum_sum** (Pandas Series): The cumulative sum of the input.\n\n## Details\nThe component calculates the cumulative sum of data, sorted by its index. \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.3,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 0.3,\n\t\t\t\t\"2019-08-01T15:20:30\": 0.5\n\t}\n}\n```\nThe expected output is\n```\n\t\"cum_sum\": {\n\t\t\t\t\"2019-08-01T15:20:10\": 3.3,\n\t\t\t\t\"2019-08-01T15:20:20\": null,\n\t\t\t\t\"2019-08-01T15:20:25\": 3.6,\n\t\t\t\t\"2019-08-01T15:20:30\": 4.1\n\t\t}\n```",
  "id": "d2cc4c0d-303e-b0ad-fdba-73392e890b30",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "1f7f06dd-be1b-6bf6-ff03-b5827812ab53",
        "name": "data"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "6235c925-1b9a-28b2-4cff-ec1f71bfdd6d",
        "name": "cum_sum"
      }
    ]
  },
  "name": "Cumulative sum",
  "released_timestamp": "2022-02-09T17:33:31.709082+00:00",
  "revision_group_id": "d2cc4c0d-303e-b0ad-fdba-73392e890b30",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}