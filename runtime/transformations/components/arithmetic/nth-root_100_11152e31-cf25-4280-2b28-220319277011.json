{
  "category": "Arithmetic",
  "content": "from hetdesrun.component.registration import register\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\nCOMPONENT_INFO = {\n    \"inputs\": {\n        \"data\": {\"data_type\": \"ANY\"},\n        \"n\": {\"data_type\": \"ANY\"},\n    },\n    \"outputs\": {\n        \"root\": {\"data_type\": \"ANY\"},\n    },\n    \"name\": \"nth root\",\n    \"category\": \"Arithmetic\",\n    \"description\": \"Calculates the nth root\",\n    \"version_tag\": \"1.0.0\",\n    \"id\": \"11152e31-cf25-4280-2b28-220319277011\",\n    \"revision_group_id\": \"11152e31-cf25-4280-2b28-220319277011\",\n    \"state\": \"RELEASED\",\n    \"released_timestamp\": \"2022-02-09T18:33:31.917736+00:00\",\n}\n\nfrom hdutils import parse_default_value  # noqa: E402, F401\n\n\ndef main(*, data, n):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    # write your function code here.\n\n    return {\"root\": data ** (1 / n)}\n",
  "description": "Calculates the nth root",
  "documentation": "# nth root\n\n## Description\nThis component calculates the nth root for numeric values, Pandas Series and Pandas DataFrames.\n\n## Inputs\n* **data** (Integer, Float, Pandas Series or Pandas DataFrame): Entries must be numeric.\n* **n** (Integer, Float, Pandas Series or Pandas DataFrame): Entries must be numeric.\n\n## Outputs\n* **root** (Integer, Float, Pandas Series or Pandas DataFrame): The nth root of data.\n\n## Details\nThe component calculates the nth root. \n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n\t\t\t\t\"2019-08-01T15:20:12\": 8,\n\t\t\t\t\"2019-08-01T15:44:12\": 27,\n\t\t\t\t\"2019-08-03T16:20:15\": 0,\n\t\t\t\t\"2019-08-05T12:00:34\": 1,\n         \t\t        \"2019-08-07T11:01:00\": 1000\n\t},\n\t\"n\": 3\n}\n```\nThe expected output is\n```\n\t\"root\": {\n\t\t\t\"2019-08-01T15:20:12\": 2,\n\t\t\t\"2019-08-01T15:44:12\": 3,\n\t\t\t\"2019-08-03T16:20:15\": 0,\n\t\t\t\"2019-08-05T12:00:34\": 1,\n        \t        \"2019-08-07T11:01:00\": 10  \n\t}\n\n```\n\nThe json input of a typical call of this component with a Pandas DataFrame is\n```\n{\n    \"data\": {\n\t\t\t\"a\": {\n            \t\t        \"2019-08-01T15:20:12\": 1,\n\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\"2019-08-03T16:20:15\": 100,\n\t\t\t\t\"2019-08-05T12:00:34\": 6.25\n             },\n                       \"b\": {\n                                \"2019-08-01T15:20:12\": 4,\n\t\t\t\t \"2019-08-01T15:44:12\": 0,\n\t\t\t\t \"2019-08-03T16:20:15\": 25,\n\t\t\t\t \"2019-08-05T12:00:34\": 625\n             }\n\t}\n}\n```\nThe expected output is\n```\n\t\"sqrt\": {\n\t\t\t\"a\": {\n            \t\t        \"2019-08-01T15:20:12\": 1,\n\t\t\t\t\"2019-08-01T15:44:12\": null,\n\t\t\t\t\"2019-08-03T16:20:15\": 10,\n\t\t\t\t\"2019-08-05T12:00:34\": 2.5\n             },\n                       \"b\": {\n                                \"2019-08-01T15:20:12\": 2,\n\t\t\t\t \"2019-08-01T15:44:12\": 0,\n\t\t\t\t \"2019-08-03T16:20:15\": 5,\n\t\t\t\t \"2019-08-05T12:00:34\": 25\t\t\t\t\n             }\n\t}\n```\n",
  "id": "11152e31-cf25-4280-2b28-220319277011",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "f5717b42-a4ad-3fd1-60e6-a575d460ab57",
        "name": "data",
        "type": "REQUIRED"
      },
      {
        "data_type": "ANY",
        "id": "fac33722-5845-9ab2-7285-088648397e37",
        "name": "n",
        "type": "REQUIRED"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "98f4bba2-4c3d-7225-a17a-e6735baddf7b",
        "name": "root"
      }
    ]
  },
  "name": "nth root",
  "released_timestamp": "2022-02-09T18:33:31.917736+00:00",
  "revision_group_id": "11152e31-cf25-4280-2b28-220319277011",
  "state": "RELEASED",
  "test_wiring": {
    "dashboard_positionings": [],
    "input_wirings": [
      {
        "adapter_id": "direct_provisioning",
        "filters": {
          "value": "8"
        },
        "use_default_value": false,
        "workflow_input_name": "data"
      },
      {
        "adapter_id": "direct_provisioning",
        "filters": {
          "value": "3"
        },
        "use_default_value": false,
        "workflow_input_name": "n"
      }
    ],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}