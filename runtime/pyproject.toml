[tool.ruff]

# allow longer lines than the default (88, same as black)
line-length = 100

# Assume python311
target-version = "py311"

select = ["E", "F", "B", "W", "PL", "ERA", "G", "I", "UP", "YTT", "S", "BLE", "A", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "INP", "PIE", "T20", "PT", "Q", "RET", "SIM", "ARG", "PD"]

ignore = ["E713", "E714", "B008", "PLR2004", "COM812", "RET504", "PD901", "PLR0913", "UP017"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Subdirs relative to working directory where to look for first party imports
# * for detecting hetdesrun:
#   * we need "." for running ruff manually in terminal inside runtime dir
#   * we need "runtime" since vscode runs ruff from the main dir
# * Since vscode runs ruff from the main dir, and since we point the vscode ruff
#   extension to the pyproject.toml of the runtime dir we need "demo-adapter-python"
#   here
src = [".", "runtime", "demo-adapter-python"]


[tool.ruff.per-file-ignores]
# Note: We need the beginning "**" since vscode extension calls ruff from the project
# main dir, while manual invocations from the runtime subdir should also work.
# (see https://docs.rs/globset/latest/globset/#syntax for glob syntax.)
"**/tests/**/*.py" = ["S101", "PT023", "T201", "INP001", "PT001", "ARG001"]
"**/tests/test_backend_kafka_consumer.py" = ["E501"]
"**/tests/**/test_load_ts_data.py" = ["E501"]
"**tests/auth/test_outgoing_auth.py" = ["S106"]


[tool.ruff.isort]
# explicitely add known first party names for import sorting
# (somehow duplicating the src setting above??)
known-first-party = ["hetdesrun", "demo_adapter_python"]